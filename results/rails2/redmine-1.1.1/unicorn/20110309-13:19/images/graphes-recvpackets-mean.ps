%!PS-Adobe-2.0
%%Title: images/graphes-recvpackets-mean.ps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Wed Mar  9 11:26:10 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-recvpackets-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (bbrowning)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Mar  9 11:26:10 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
854 448 M
6135 0 V
stroke
LTb
854 448 M
63 0 V
6072 0 R
-63 0 V
770 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 1044 M
6135 0 V
stroke
LTb
854 1044 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 1000) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 1640 M
6135 0 V
stroke
LTb
854 1640 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 2000) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 2236 M
6135 0 V
stroke
LTb
854 2236 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 3000) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 2831 M
6135 0 V
stroke
LTb
854 2831 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 4000) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 3427 M
6135 0 V
stroke
LTb
854 3427 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 5000) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 4023 M
6135 0 V
stroke
LTb
854 4023 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 6000) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 4619 M
6135 0 V
stroke
LTb
854 4619 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 7000) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 448 M
0 4171 V
stroke
LTb
854 448 M
0 63 V
0 4108 R
0 -63 V
854 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1468 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
1468 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
2081 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
2081 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
2695 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
2695 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3308 448 M
0 4171 V
stroke
LTb
3308 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
3922 448 M
0 4171 V
stroke
LTb
3922 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTa
4535 448 M
0 4171 V
stroke
LTb
4535 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 3000) Cshow
1.000 UL
LTb
1.000 UL
LTa
5149 448 M
0 4171 V
stroke
LTb
5149 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 3500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5762 448 M
0 4171 V
stroke
LTb
5762 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 4000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6376 448 M
0 4171 V
stroke
LTb
6376 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 4500) Cshow
1.000 UL
LTb
1.000 UL
LTa
6989 448 M
0 4171 V
stroke
LTb
6989 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 5000) Cshow
1.000 UL
LTb
1.000 UL
LTb
854 4619 N
854 448 L
6135 0 V
0 4171 V
-6135 0 V
Z stroke
LCb setrgbcolor
196 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(recvpackets) Cshow
grestore
LTb
LCb setrgbcolor
3921 98 M
(unit = sec ) Cshow
LTb
3921 4829 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
2450 4486 M
(recvpackets@server) Rshow
LT0
2534 4486 M
399 0 V
879 464 M
12 106 V
12 114 V
12 39 V
13 -96 V
12 69 V
12 -27 V
12 22 V
13 60 V
12 -42 V
12 139 V
13 -122 V
12 -68 V
12 217 V
12 -5 V
13 143 V
12 -214 V
12 215 V
12 49 V
13 52 V
12 -93 V
12 58 V
12 -25 V
13 218 V
12 -24 V
12 90 V
13 -205 V
12 228 V
12 172 V
12 -251 V
13 -60 V
12 29 V
12 178 V
12 -153 V
13 67 V
12 218 V
12 -214 V
13 73 V
12 255 V
12 -204 V
12 102 V
13 -16 V
12 275 V
12 40 V
12 -190 V
13 36 V
12 60 V
12 -112 V
13 96 V
12 95 V
12 95 V
12 -74 V
13 223 V
12 -166 V
12 -14 V
12 -6 V
13 40 V
12 162 V
12 219 V
12 294 V
13 69 V
12 42 V
12 -231 V
13 322 V
12 -210 V
12 -147 V
12 94 V
13 -1 V
12 210 V
12 -143 V
12 -178 V
13 232 V
12 -192 V
12 -61 V
13 349 V
12 -285 V
12 -49 V
12 133 V
13 149 V
12 -305 V
12 -28 V
12 196 V
13 -58 V
12 278 V
12 -80 V
12 -122 V
13 -84 V
12 -78 V
12 362 V
13 644 V
12 -301 V
12 265 V
12 -215 V
13 -2 V
12 -167 V
12 509 V
12 -347 V
13 281 V
12 13 V
12 -190 V
13 252 V
12 -217 V
12 171 V
stroke 2130 3511 M
12 -308 V
13 151 V
12 188 V
12 -656 V
12 405 V
13 -82 V
12 246 V
12 137 V
13 -66 V
12 -105 V
12 -124 V
12 118 V
13 142 V
12 -33 V
12 -109 V
12 176 V
13 -34 V
12 105 V
12 -20 V
12 66 V
13 -46 V
12 -161 V
12 138 V
13 45 V
12 28 V
12 -105 V
12 -28 V
13 84 V
12 36 V
12 -147 V
12 83 V
13 -27 V
12 120 V
12 -182 V
13 38 V
12 14 V
12 188 V
12 -131 V
13 -14 V
12 44 V
12 -86 V
12 33 V
13 1 V
12 111 V
12 -109 V
13 18 V
12 16 V
12 62 V
12 -164 V
25 122 V
12 -3 V
12 -201 V
13 95 V
12 116 V
12 -32 V
12 -147 V
13 258 V
12 -381 V
12 281 V
13 20 V
12 -6 V
12 -27 V
12 25 V
13 -101 V
12 207 V
12 -129 V
12 82 V
13 -56 V
12 -25 V
12 -42 V
13 57 V
12 37 V
12 9 V
12 -6 V
13 0 V
12 -69 V
12 -11 V
12 100 V
13 -118 V
12 59 V
12 -64 V
12 34 V
13 112 V
12 -50 V
12 -45 V
13 193 V
12 -303 V
12 266 V
12 -169 V
13 142 V
12 -136 V
12 82 V
12 -114 V
13 -41 V
12 61 V
12 33 V
13 -19 V
12 125 V
12 71 V
12 -81 V
13 -158 V
12 135 V
12 319 V
12 -276 V
stroke 3418 3798 M
13 -104 V
12 53 V
12 9 V
13 13 V
12 15 V
12 -92 V
12 -8 V
13 -105 V
12 148 V
12 -64 V
12 40 V
13 108 V
12 -174 V
12 153 V
12 -111 V
13 170 V
12 1 V
12 -197 V
13 98 V
12 -54 V
12 134 V
12 -147 V
13 6 V
12 31 V
12 -58 V
12 67 V
13 63 V
12 -129 V
12 21 V
13 438 V
12 -566 V
12 135 V
12 32 V
13 40 V
12 -40 V
12 -76 V
12 20 V
13 208 V
12 -129 V
12 12 V
13 -40 V
12 4 V
12 0 V
12 -41 V
13 -18 V
12 58 V
12 131 V
12 -75 V
13 -147 V
12 181 V
12 -158 V
12 1 V
13 40 V
12 -92 V
12 36 V
13 237 V
12 -174 V
12 49 V
12 -53 V
13 -32 V
12 -44 V
12 227 V
12 -48 V
13 -107 V
12 109 V
12 -192 V
13 170 V
12 -112 V
12 115 V
12 -62 V
13 245 V
24 159 V
12 -427 V
13 76 V
12 -71 V
12 -144 V
12 209 V
13 -48 V
12 47 V
12 -70 V
13 -64 V
12 232 V
12 -105 V
12 -79 V
13 -11 V
12 57 V
12 -21 V
12 -100 V
13 19 V
12 25 V
12 -105 V
13 164 V
12 -79 V
12 204 V
12 -251 V
13 58 V
12 22 V
12 132 V
12 -232 V
13 112 V
12 96 V
12 -77 V
13 -46 V
12 78 V
stroke 4707 3727 M
12 39 V
12 -183 V
13 94 V
12 -113 V
12 18 V
12 227 V
13 -148 V
12 43 V
12 37 V
12 -130 V
13 33 V
12 126 V
12 -54 V
13 -72 V
12 -251 V
12 0 V
12 270 V
13 50 V
12 -168 V
12 -23 V
12 604 V
13 138 V
12 -576 V
12 -81 V
13 91 V
12 -49 V
12 99 V
12 -28 V
13 -36 V
12 30 V
12 -152 V
12 -49 V
13 182 V
12 29 V
12 -27 V
13 137 V
12 -111 V
12 -177 V
12 61 V
13 20 V
12 55 V
12 46 V
12 -36 V
13 17 V
12 -78 V
12 32 V
12 72 V
13 -99 V
12 163 V
12 -36 V
13 -70 V
12 -38 V
12 -14 V
12 -8 V
13 96 V
12 9 V
12 -66 V
12 50 V
13 -118 V
12 -229 V
12 238 V
13 -52 V
12 132 V
12 21 V
12 -59 V
13 -231 V
12 394 V
12 -135 V
12 -76 V
13 24 V
12 85 V
12 -308 V
12 828 V
13 46 V
12 -556 V
12 -35 V
13 -98 V
12 68 V
12 52 V
12 -73 V
13 -37 V
12 20 V
12 -35 V
12 -66 V
13 110 V
12 26 V
12 16 V
13 -236 V
12 -52 V
12 268 V
12 55 V
13 -35 V
12 -3 V
12 -13 V
12 -78 V
13 -15 V
12 216 V
12 -130 V
13 -130 V
12 53 V
12 34 V
12 -110 V
13 52 V
12 179 V
stroke 5983 3729 M
12 -56 V
12 49 V
13 -181 V
12 56 V
12 -61 V
12 231 V
13 -200 V
12 -113 V
12 133 V
13 -41 V
12 -7 V
12 243 V
12 -367 V
13 250 V
12 -192 V
12 -13 V
12 -6 V
13 -37 V
12 84 V
12 -22 V
13 182 V
12 -293 V
12 6 V
12 59 V
13 -136 V
12 118 V
24 -190 V
13 3 V
12 29 V
12 148 V
13 -10 V
12 -254 V
12 -402 V
12 -530 V
13 -397 V
12 -439 V
12 -499 V
12 60 V
13 -47 V
12 -77 V
12 279 V
12 -356 V
13 -188 V
12 -6 V
6 -9 V
879 464 Pls
891 570 Pls
903 684 Pls
915 723 Pls
928 627 Pls
940 696 Pls
952 669 Pls
964 691 Pls
977 751 Pls
989 709 Pls
1001 848 Pls
1014 726 Pls
1026 658 Pls
1038 875 Pls
1050 870 Pls
1063 1013 Pls
1075 799 Pls
1087 1014 Pls
1099 1063 Pls
1112 1115 Pls
1124 1022 Pls
1136 1080 Pls
1148 1055 Pls
1161 1273 Pls
1173 1249 Pls
1185 1339 Pls
1198 1134 Pls
1210 1362 Pls
1222 1534 Pls
1234 1283 Pls
1247 1223 Pls
1259 1252 Pls
1271 1430 Pls
1283 1277 Pls
1296 1344 Pls
1308 1562 Pls
1320 1348 Pls
1333 1421 Pls
1345 1676 Pls
1357 1472 Pls
1369 1574 Pls
1382 1558 Pls
1394 1833 Pls
1406 1873 Pls
1418 1683 Pls
1431 1719 Pls
1443 1779 Pls
1455 1667 Pls
1468 1763 Pls
1480 1858 Pls
1492 1953 Pls
1504 1879 Pls
1517 2102 Pls
1529 1936 Pls
1541 1922 Pls
1553 1916 Pls
1566 1956 Pls
1578 2118 Pls
1590 2337 Pls
1602 2631 Pls
1615 2700 Pls
1627 2742 Pls
1639 2511 Pls
1652 2833 Pls
1664 2623 Pls
1676 2476 Pls
1688 2570 Pls
1701 2569 Pls
1713 2779 Pls
1725 2636 Pls
1737 2458 Pls
1750 2690 Pls
1762 2498 Pls
1774 2437 Pls
1787 2786 Pls
1799 2501 Pls
1811 2452 Pls
1823 2585 Pls
1836 2734 Pls
1848 2429 Pls
1860 2401 Pls
1872 2597 Pls
1885 2539 Pls
1897 2817 Pls
1909 2737 Pls
1921 2615 Pls
1934 2531 Pls
1946 2453 Pls
1958 2815 Pls
1971 3459 Pls
1983 3158 Pls
1995 3423 Pls
2007 3208 Pls
2020 3206 Pls
2032 3039 Pls
2044 3548 Pls
2056 3201 Pls
2069 3482 Pls
2081 3495 Pls
2093 3305 Pls
2106 3557 Pls
2118 3340 Pls
2130 3511 Pls
2142 3203 Pls
2155 3354 Pls
2167 3542 Pls
2179 2886 Pls
2191 3291 Pls
2204 3209 Pls
2216 3455 Pls
2228 3592 Pls
2241 3526 Pls
2253 3421 Pls
2265 3297 Pls
2277 3415 Pls
2290 3557 Pls
2302 3524 Pls
2314 3415 Pls
2326 3591 Pls
2339 3557 Pls
2351 3662 Pls
2363 3642 Pls
2375 3708 Pls
2388 3662 Pls
2400 3501 Pls
2412 3639 Pls
2425 3684 Pls
2437 3712 Pls
2449 3607 Pls
2461 3579 Pls
2474 3663 Pls
2486 3699 Pls
2498 3552 Pls
2510 3635 Pls
2523 3608 Pls
2535 3728 Pls
2547 3546 Pls
2560 3584 Pls
2572 3598 Pls
2584 3786 Pls
2596 3655 Pls
2609 3641 Pls
2621 3685 Pls
2633 3599 Pls
2645 3632 Pls
2658 3633 Pls
2670 3744 Pls
2682 3635 Pls
2695 3653 Pls
2707 3669 Pls
2719 3731 Pls
2731 3567 Pls
2756 3689 Pls
2768 3686 Pls
2780 3485 Pls
2793 3580 Pls
2805 3696 Pls
2817 3664 Pls
2829 3517 Pls
2842 3775 Pls
2854 3394 Pls
2866 3675 Pls
2879 3695 Pls
2891 3689 Pls
2903 3662 Pls
2915 3687 Pls
2928 3586 Pls
2940 3793 Pls
2952 3664 Pls
2964 3746 Pls
2977 3690 Pls
2989 3665 Pls
3001 3623 Pls
3014 3680 Pls
3026 3717 Pls
3038 3726 Pls
3050 3720 Pls
3063 3720 Pls
3075 3651 Pls
3087 3640 Pls
3099 3740 Pls
3112 3622 Pls
3124 3681 Pls
3136 3617 Pls
3148 3651 Pls
3161 3763 Pls
3173 3713 Pls
3185 3668 Pls
3198 3861 Pls
3210 3558 Pls
3222 3824 Pls
3234 3655 Pls
3247 3797 Pls
3259 3661 Pls
3271 3743 Pls
3283 3629 Pls
3296 3588 Pls
3308 3649 Pls
3320 3682 Pls
3333 3663 Pls
3345 3788 Pls
3357 3859 Pls
3369 3778 Pls
3382 3620 Pls
3394 3755 Pls
3406 4074 Pls
3418 3798 Pls
3431 3694 Pls
3443 3747 Pls
3455 3756 Pls
3468 3769 Pls
3480 3784 Pls
3492 3692 Pls
3504 3684 Pls
3517 3579 Pls
3529 3727 Pls
3541 3663 Pls
3553 3703 Pls
3566 3811 Pls
3578 3637 Pls
3590 3790 Pls
3602 3679 Pls
3615 3849 Pls
3627 3850 Pls
3639 3653 Pls
3652 3751 Pls
3664 3697 Pls
3676 3831 Pls
3688 3684 Pls
3701 3690 Pls
3713 3721 Pls
3725 3663 Pls
3737 3730 Pls
3750 3793 Pls
3762 3664 Pls
3774 3685 Pls
3787 4123 Pls
3799 3557 Pls
3811 3692 Pls
3823 3724 Pls
3836 3764 Pls
3848 3724 Pls
3860 3648 Pls
3872 3668 Pls
3885 3876 Pls
3897 3747 Pls
3909 3759 Pls
3922 3719 Pls
3934 3723 Pls
3946 3723 Pls
3958 3682 Pls
3971 3664 Pls
3983 3722 Pls
3995 3853 Pls
4007 3778 Pls
4020 3631 Pls
4032 3812 Pls
4044 3654 Pls
4056 3655 Pls
4069 3695 Pls
4081 3603 Pls
4093 3639 Pls
4106 3876 Pls
4118 3702 Pls
4130 3751 Pls
4142 3698 Pls
4155 3666 Pls
4167 3622 Pls
4179 3849 Pls
4191 3801 Pls
4204 3694 Pls
4216 3803 Pls
4228 3611 Pls
4241 3781 Pls
4253 3669 Pls
4265 3784 Pls
4277 3722 Pls
4290 3967 Pls
4314 4126 Pls
4326 3699 Pls
4339 3775 Pls
4351 3704 Pls
4363 3560 Pls
4375 3769 Pls
4388 3721 Pls
4400 3768 Pls
4412 3698 Pls
4425 3634 Pls
4437 3866 Pls
4449 3761 Pls
4461 3682 Pls
4474 3671 Pls
4486 3728 Pls
4498 3707 Pls
4510 3607 Pls
4523 3626 Pls
4535 3651 Pls
4547 3546 Pls
4560 3710 Pls
4572 3631 Pls
4584 3835 Pls
4596 3584 Pls
4609 3642 Pls
4621 3664 Pls
4633 3796 Pls
4645 3564 Pls
4658 3676 Pls
4670 3772 Pls
4682 3695 Pls
4695 3649 Pls
4707 3727 Pls
4719 3766 Pls
4731 3583 Pls
4744 3677 Pls
4756 3564 Pls
4768 3582 Pls
4780 3809 Pls
4793 3661 Pls
4805 3704 Pls
4817 3741 Pls
4829 3611 Pls
4842 3644 Pls
4854 3770 Pls
4866 3716 Pls
4879 3644 Pls
4891 3393 Pls
4903 3393 Pls
4915 3663 Pls
4928 3713 Pls
4940 3545 Pls
4952 3522 Pls
4964 4126 Pls
4977 4264 Pls
4989 3688 Pls
5001 3607 Pls
5014 3698 Pls
5026 3649 Pls
5038 3748 Pls
5050 3720 Pls
5063 3684 Pls
5075 3714 Pls
5087 3562 Pls
5099 3513 Pls
5112 3695 Pls
5124 3724 Pls
5136 3697 Pls
5149 3834 Pls
5161 3723 Pls
5173 3546 Pls
5185 3607 Pls
5198 3627 Pls
5210 3682 Pls
5222 3728 Pls
5234 3692 Pls
5247 3709 Pls
5259 3631 Pls
5271 3663 Pls
5283 3735 Pls
5296 3636 Pls
5308 3799 Pls
5320 3763 Pls
5333 3693 Pls
5345 3655 Pls
5357 3641 Pls
5369 3633 Pls
5382 3729 Pls
5394 3738 Pls
5406 3672 Pls
5418 3722 Pls
5431 3604 Pls
5443 3375 Pls
5455 3613 Pls
5468 3561 Pls
5480 3693 Pls
5492 3714 Pls
5504 3655 Pls
5517 3424 Pls
5529 3818 Pls
5541 3683 Pls
5553 3607 Pls
5566 3631 Pls
5578 3716 Pls
5590 3408 Pls
5602 4236 Pls
5615 4282 Pls
5627 3726 Pls
5639 3691 Pls
5652 3593 Pls
5664 3661 Pls
5676 3713 Pls
5688 3640 Pls
5701 3603 Pls
5713 3623 Pls
5725 3588 Pls
5737 3522 Pls
5750 3632 Pls
5762 3658 Pls
5774 3674 Pls
5787 3438 Pls
5799 3386 Pls
5811 3654 Pls
5823 3709 Pls
5836 3674 Pls
5848 3671 Pls
5860 3658 Pls
5872 3580 Pls
5885 3565 Pls
5897 3781 Pls
5909 3651 Pls
5922 3521 Pls
5934 3574 Pls
5946 3608 Pls
5958 3498 Pls
5971 3550 Pls
5983 3729 Pls
5995 3673 Pls
6007 3722 Pls
6020 3541 Pls
6032 3597 Pls
6044 3536 Pls
6056 3767 Pls
6069 3567 Pls
6081 3454 Pls
6093 3587 Pls
6106 3546 Pls
6118 3539 Pls
6130 3782 Pls
6142 3415 Pls
6155 3665 Pls
6167 3473 Pls
6179 3460 Pls
6191 3454 Pls
6204 3417 Pls
6216 3501 Pls
6228 3479 Pls
6241 3661 Pls
6253 3368 Pls
6265 3374 Pls
6277 3433 Pls
6290 3297 Pls
6302 3415 Pls
6326 3225 Pls
6339 3228 Pls
6351 3257 Pls
6363 3405 Pls
6376 3395 Pls
6388 3141 Pls
6400 2739 Pls
6412 2209 Pls
6425 1812 Pls
6437 1373 Pls
6449 874 Pls
6461 934 Pls
6474 887 Pls
6486 810 Pls
6498 1089 Pls
6510 733 Pls
6523 545 Pls
6535 539 Pls
6541 530 Pls
2733 4486 Pls
% End plot #1
1.000 UL
LTb
854 4619 N
854 448 L
6135 0 V
0 4171 V
-6135 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
