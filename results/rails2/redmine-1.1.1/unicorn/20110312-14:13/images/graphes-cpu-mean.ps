%!PS-Adobe-2.0
%%Title: images/graphes-cpu-mean.ps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Sat Mar 12 10:05:13 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-cpu-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (bbrowning)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Mar 12 10:05:13 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
686 448 M
6303 0 V
stroke
LTb
686 448 M
63 0 V
6240 0 R
-63 0 V
602 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 911 M
6303 0 V
stroke
LTb
686 911 M
63 0 V
6240 0 R
-63 0 V
602 911 M
( 10) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 1375 M
6303 0 V
stroke
LTb
686 1375 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 20) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 1838 M
6303 0 V
stroke
LTb
686 1838 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 30) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 2302 M
6303 0 V
stroke
LTb
686 2302 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 40) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 2765 M
6303 0 V
stroke
LTb
686 2765 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 50) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 3229 M
6303 0 V
stroke
LTb
686 3229 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 60) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 3692 M
6303 0 V
stroke
LTb
686 3692 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 70) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 4156 M
6303 0 V
stroke
LTb
686 4156 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 80) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 4619 M
6303 0 V
stroke
LTb
686 4619 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 90) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 448 M
0 4171 V
stroke
LTb
686 448 M
0 63 V
0 4108 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1737 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
1737 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
2787 448 M
0 4171 V
stroke
LTb
2787 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
3838 448 M
0 4171 V
stroke
LTb
3838 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
4888 448 M
0 4171 V
stroke
LTb
4888 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
5939 448 M
0 4171 V
stroke
LTb
5939 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTa
6989 448 M
0 4171 V
stroke
LTb
6989 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 3000) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4619 N
686 448 L
6303 0 V
0 4171 V
-6303 0 V
Z stroke
LCb setrgbcolor
196 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(cpu) Cshow
grestore
LTb
LCb setrgbcolor
3837 98 M
(unit = sec ) Cshow
LTb
3837 4829 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
1610 4486 M
(cpu@server) Rshow
LT0
1694 4486 M
399 0 V
707 475 M
21 1 V
21 138 V
21 43 V
21 84 V
21 4 V
833 643 L
21 -3 V
21 8 V
21 34 V
21 -35 V
21 -20 V
21 68 V
21 86 V
21 38 V
21 41 V
21 196 V
21 -22 V
21 51 V
21 -160 V
21 114 V
21 -131 V
21 105 V
21 120 V
21 51 V
21 77 V
21 389 V
21 -121 V
21 -89 V
21 -127 V
21 63 V
21 91 V
21 -73 V
21 38 V
21 162 V
21 -152 V
21 331 V
21 226 V
21 96 V
21 614 V
21 -779 V
21 299 V
21 35 V
21 -447 V
21 349 V
21 360 V
21 150 V
21 -261 V
21 -497 V
22 473 V
21 98 V
21 144 V
21 -360 V
21 587 V
21 -399 V
21 199 V
21 -41 V
21 526 V
21 593 V
21 494 V
21 264 V
21 -152 V
21 190 V
21 83 V
21 -179 V
21 66 V
21 -45 V
21 -66 V
21 162 V
21 -89 V
21 -67 V
21 33 V
21 54 V
21 -31 V
21 -89 V
21 154 V
21 -41 V
21 -57 V
21 75 V
21 -48 V
21 22 V
21 39 V
21 -112 V
21 94 V
21 21 V
21 -49 V
21 -165 V
21 42 V
21 51 V
21 71 V
21 56 V
21 -42 V
21 15 V
21 -96 V
21 55 V
21 12 V
21 49 V
21 -208 V
21 20 V
21 185 V
21 -11 V
21 -31 V
21 -82 V
21 -38 V
21 104 V
21 -47 V
21 -6 V
21 -25 V
21 29 V
21 6 V
21 28 V
stroke 3018 4436 M
21 -67 V
21 126 V
42 -79 V
21 -89 V
21 98 V
21 11 V
21 50 V
21 -85 V
21 33 V
21 36 V
21 -88 V
21 -78 V
21 104 V
21 11 V
21 -41 V
21 43 V
21 -27 V
21 -60 V
21 65 V
21 -97 V
21 42 V
21 61 V
21 115 V
21 -207 V
21 72 V
21 -35 V
21 4 V
21 2 V
21 30 V
21 -89 V
21 71 V
21 1 V
21 -51 V
21 56 V
21 2 V
21 22 V
21 16 V
22 -195 V
21 108 V
21 -40 V
21 187 V
21 -98 V
21 107 V
21 -223 V
21 132 V
21 -84 V
21 2 V
21 8 V
21 42 V
21 -179 V
21 15 V
21 160 V
21 -835 V
21 588 V
21 65 V
21 158 V
21 35 V
21 -57 V
21 -1 V
21 93 V
21 -17 V
21 37 V
21 -7 V
21 -88 V
21 -17 V
21 149 V
21 -143 V
21 -126 V
21 145 V
21 45 V
21 -27 V
21 -30 V
21 -30 V
21 19 V
21 7 V
21 -192 V
21 20 V
21 217 V
21 -45 V
21 -36 V
21 101 V
21 -331 V
21 284 V
21 84 V
21 -154 V
21 108 V
21 71 V
21 -208 V
21 239 V
21 38 V
21 -412 V
21 253 V
21 56 V
21 -358 V
21 219 V
21 -20 V
21 -29 V
21 162 V
21 20 V
21 -41 V
21 -142 V
21 81 V
21 107 V
21 -167 V
stroke 5224 4244 M
21 101 V
21 -23 V
21 67 V
42 -7 V
21 5 V
21 -208 V
21 229 V
21 -42 V
21 -37 V
21 -10 V
21 75 V
21 4 V
21 -2 V
21 -71 V
21 12 V
21 -75 V
21 122 V
21 -90 V
21 62 V
21 -32 V
21 -11 V
21 39 V
21 -6 V
21 -74 V
21 174 V
21 -186 V
21 71 V
21 -59 V
21 132 V
21 -66 V
21 69 V
21 -60 V
22 -85 V
21 14 V
21 -74 V
21 48 V
21 -5 V
21 65 V
21 -19 V
21 -48 V
21 -40 V
21 -3 V
21 130 V
21 131 V
21 -194 V
21 208 V
21 -176 V
21 -140 V
21 22 V
21 233 V
21 -180 V
21 18 V
21 99 V
21 -11 V
21 -114 V
21 164 V
21 -37 V
21 -25 V
21 -151 V
21 256 V
21 -60 V
21 -50 V
21 -33 V
21 176 V
21 -307 V
21 188 V
21 -17 V
21 -1 V
21 -3 V
21 -1 V
21 -128 V
21 114 V
21 -91 V
21 -163 V
15 267 V
707 475 Pls
728 476 Pls
749 614 Pls
770 657 Pls
791 741 Pls
812 745 Pls
833 643 Pls
854 640 Pls
875 648 Pls
896 682 Pls
917 647 Pls
938 627 Pls
959 695 Pls
980 781 Pls
1001 819 Pls
1022 860 Pls
1043 1056 Pls
1064 1034 Pls
1085 1085 Pls
1106 925 Pls
1127 1039 Pls
1148 908 Pls
1169 1013 Pls
1190 1133 Pls
1211 1184 Pls
1232 1261 Pls
1253 1650 Pls
1274 1529 Pls
1295 1440 Pls
1316 1313 Pls
1337 1376 Pls
1358 1467 Pls
1379 1394 Pls
1400 1432 Pls
1421 1594 Pls
1442 1442 Pls
1463 1773 Pls
1484 1999 Pls
1505 2095 Pls
1526 2709 Pls
1547 1930 Pls
1568 2229 Pls
1589 2264 Pls
1610 1817 Pls
1631 2166 Pls
1652 2526 Pls
1673 2676 Pls
1694 2415 Pls
1715 1918 Pls
1737 2391 Pls
1758 2489 Pls
1779 2633 Pls
1800 2273 Pls
1821 2860 Pls
1842 2461 Pls
1863 2660 Pls
1884 2619 Pls
1905 3145 Pls
1926 3738 Pls
1947 4232 Pls
1968 4496 Pls
1989 4344 Pls
2010 4534 Pls
2031 4617 Pls
2052 4438 Pls
2073 4504 Pls
2094 4459 Pls
2115 4393 Pls
2136 4555 Pls
2157 4466 Pls
2178 4399 Pls
2199 4432 Pls
2220 4486 Pls
2241 4455 Pls
2262 4366 Pls
2283 4520 Pls
2304 4479 Pls
2325 4422 Pls
2346 4497 Pls
2367 4449 Pls
2388 4471 Pls
2409 4510 Pls
2430 4398 Pls
2451 4492 Pls
2472 4513 Pls
2493 4464 Pls
2514 4299 Pls
2535 4341 Pls
2556 4392 Pls
2577 4463 Pls
2598 4519 Pls
2619 4477 Pls
2640 4492 Pls
2661 4396 Pls
2682 4451 Pls
2703 4463 Pls
2724 4512 Pls
2745 4304 Pls
2766 4324 Pls
2787 4509 Pls
2808 4498 Pls
2829 4467 Pls
2850 4385 Pls
2871 4347 Pls
2892 4451 Pls
2913 4404 Pls
2934 4398 Pls
2955 4373 Pls
2976 4402 Pls
2997 4408 Pls
3018 4436 Pls
3039 4369 Pls
3060 4495 Pls
3102 4416 Pls
3123 4327 Pls
3144 4425 Pls
3165 4436 Pls
3186 4486 Pls
3207 4401 Pls
3228 4434 Pls
3249 4470 Pls
3270 4382 Pls
3291 4304 Pls
3312 4408 Pls
3333 4419 Pls
3354 4378 Pls
3375 4421 Pls
3396 4394 Pls
3417 4334 Pls
3438 4399 Pls
3459 4302 Pls
3480 4344 Pls
3501 4405 Pls
3522 4520 Pls
3543 4313 Pls
3564 4385 Pls
3585 4350 Pls
3606 4354 Pls
3627 4356 Pls
3648 4386 Pls
3669 4297 Pls
3690 4368 Pls
3711 4369 Pls
3732 4318 Pls
3753 4374 Pls
3774 4376 Pls
3795 4398 Pls
3816 4414 Pls
3838 4219 Pls
3859 4327 Pls
3880 4287 Pls
3901 4474 Pls
3922 4376 Pls
3943 4483 Pls
3964 4260 Pls
3985 4392 Pls
4006 4308 Pls
4027 4310 Pls
4048 4318 Pls
4069 4360 Pls
4090 4181 Pls
4111 4196 Pls
4132 4356 Pls
4153 3521 Pls
4174 4109 Pls
4195 4174 Pls
4216 4332 Pls
4237 4367 Pls
4258 4310 Pls
4279 4309 Pls
4300 4402 Pls
4321 4385 Pls
4342 4422 Pls
4363 4415 Pls
4384 4327 Pls
4405 4310 Pls
4426 4459 Pls
4447 4316 Pls
4468 4190 Pls
4489 4335 Pls
4510 4380 Pls
4531 4353 Pls
4552 4323 Pls
4573 4293 Pls
4594 4312 Pls
4615 4319 Pls
4636 4127 Pls
4657 4147 Pls
4678 4364 Pls
4699 4319 Pls
4720 4283 Pls
4741 4384 Pls
4762 4053 Pls
4783 4337 Pls
4804 4421 Pls
4825 4267 Pls
4846 4375 Pls
4867 4446 Pls
4888 4238 Pls
4909 4477 Pls
4930 4515 Pls
4951 4103 Pls
4972 4356 Pls
4993 4412 Pls
5014 4054 Pls
5035 4273 Pls
5056 4253 Pls
5077 4224 Pls
5098 4386 Pls
5119 4406 Pls
5140 4365 Pls
5161 4223 Pls
5182 4304 Pls
5203 4411 Pls
5224 4244 Pls
5245 4345 Pls
5266 4322 Pls
5287 4389 Pls
5329 4382 Pls
5350 4387 Pls
5371 4179 Pls
5392 4408 Pls
5413 4366 Pls
5434 4329 Pls
5455 4319 Pls
5476 4394 Pls
5497 4398 Pls
5518 4396 Pls
5539 4325 Pls
5560 4337 Pls
5581 4262 Pls
5602 4384 Pls
5623 4294 Pls
5644 4356 Pls
5665 4324 Pls
5686 4313 Pls
5707 4352 Pls
5728 4346 Pls
5749 4272 Pls
5770 4446 Pls
5791 4260 Pls
5812 4331 Pls
5833 4272 Pls
5854 4404 Pls
5875 4338 Pls
5896 4407 Pls
5917 4347 Pls
5939 4262 Pls
5960 4276 Pls
5981 4202 Pls
6002 4250 Pls
6023 4245 Pls
6044 4310 Pls
6065 4291 Pls
6086 4243 Pls
6107 4203 Pls
6128 4200 Pls
6149 4330 Pls
6170 4461 Pls
6191 4267 Pls
6212 4475 Pls
6233 4299 Pls
6254 4159 Pls
6275 4181 Pls
6296 4414 Pls
6317 4234 Pls
6338 4252 Pls
6359 4351 Pls
6380 4340 Pls
6401 4226 Pls
6422 4390 Pls
6443 4353 Pls
6464 4328 Pls
6485 4177 Pls
6506 4433 Pls
6527 4373 Pls
6548 4323 Pls
6569 4290 Pls
6590 4466 Pls
6611 4159 Pls
6632 4347 Pls
6653 4330 Pls
6674 4329 Pls
6695 4326 Pls
6716 4325 Pls
6737 4197 Pls
6758 4311 Pls
6779 4220 Pls
6800 4057 Pls
6815 4324 Pls
1893 4486 Pls
% End plot #1
1.000 UL
LTb
686 4619 N
686 448 L
6303 0 V
0 4171 V
-6303 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
