%!PS-Adobe-2.0
%%Title: images/graphes-cpu-mean.ps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Tue Mar  8 11:51:34 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-cpu-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (bbrowning)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Mar  8 11:51:34 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
686 448 M
6303 0 V
stroke
LTb
686 448 M
63 0 V
6240 0 R
-63 0 V
602 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 1282 M
6303 0 V
stroke
LTb
686 1282 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 5) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 2116 M
6303 0 V
stroke
LTb
686 2116 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 10) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 2951 M
6303 0 V
stroke
LTb
686 2951 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 15) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 3785 M
6303 0 V
stroke
LTb
686 3785 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 20) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 4619 M
6303 0 V
stroke
LTb
686 4619 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 25) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 448 M
0 4171 V
stroke
LTb
686 448 M
0 63 V
0 4108 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1386 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
1386 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 200) Cshow
1.000 UL
LTb
1.000 UL
LTa
2087 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
2087 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 400) Cshow
1.000 UL
LTb
1.000 UL
LTa
2787 448 M
0 4171 V
stroke
LTb
2787 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 600) Cshow
1.000 UL
LTb
1.000 UL
LTa
3487 448 M
0 4171 V
stroke
LTb
3487 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 800) Cshow
1.000 UL
LTb
1.000 UL
LTa
4188 448 M
0 4171 V
stroke
LTb
4188 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4888 448 M
0 4171 V
stroke
LTb
4888 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1200) Cshow
1.000 UL
LTb
1.000 UL
LTa
5588 448 M
0 4171 V
stroke
LTb
5588 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1400) Cshow
1.000 UL
LTb
1.000 UL
LTa
6289 448 M
0 4171 V
stroke
LTb
6289 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1600) Cshow
1.000 UL
LTb
1.000 UL
LTa
6989 448 M
0 4171 V
stroke
LTb
6989 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1800) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4619 N
686 448 L
6303 0 V
0 4171 V
-6303 0 V
Z stroke
LCb setrgbcolor
196 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(cpu) Cshow
grestore
LTb
LCb setrgbcolor
3837 98 M
(unit = sec ) Cshow
LTb
3837 4829 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
1610 4486 M
(cpu@server) Rshow
LT0
1694 4486 M
399 0 V
721 480 M
35 -19 V
35 197 V
35 118 V
35 27 V
35 -83 V
35 -27 V
35 128 V
35 -94 V
35 -27 V
35 141 V
35 -50 V
35 -67 V
35 73 V
35 75 V
35 -126 V
35 191 V
35 69 V
35 71 V
35 -79 V
35 79 V
35 -133 V
35 78 V
35 91 V
35 -94 V
35 304 V
35 -31 V
35 118 V
35 -14 V
36 -217 V
35 129 V
35 -5 V
35 23 V
35 52 V
35 188 V
35 -335 V
35 131 V
35 74 V
35 55 V
35 3 V
35 109 V
35 15 V
35 -174 V
35 86 V
35 -122 V
35 226 V
35 -79 V
35 162 V
35 43 V
35 79 V
35 363 V
35 -349 V
35 -291 V
35 590 V
35 28 V
35 -263 V
35 -3 V
35 73 V
35 105 V
35 64 V
35 -13 V
35 -2 V
35 1265 V
35 -748 V
35 416 V
35 174 V
35 -111 V
35 135 V
35 -737 V
35 299 V
35 -299 V
35 305 V
35 -594 V
35 407 V
35 -9 V
35 -71 V
35 117 V
35 -361 V
35 157 V
35 -168 V
35 64 V
35 93 V
35 203 V
35 -49 V
35 541 V
35 -359 V
35 406 V
35 -348 V
35 51 V
36 461 V
35 -139 V
35 -66 V
35 369 V
35 -21 V
35 -200 V
35 595 V
35 -34 V
35 -316 V
35 -174 V
35 -640 V
35 728 V
35 -50 V
35 -242 V
stroke 4293 3191 M
35 -710 V
35 456 V
35 541 V
4433 791 L
35 2534 V
35 71 V
35 -166 V
35 206 V
35 -620 V
35 42 V
35 673 V
35 -652 V
35 218 V
35 658 V
35 -848 V
35 689 V
35 -192 V
35 -946 V
35 586 V
35 -50 V
35 240 V
35 -151 V
35 19 V
35 245 V
35 39 V
35 -77 V
35 -252 V
35 -343 V
35 620 V
35 36 V
35 94 V
35 -1244 V
35 1421 V
35 -497 V
35 54 V
35 -383 V
35 384 V
35 -188 V
35 28 V
35 48 V
35 492 V
35 -379 V
35 -42 V
35 79 V
35 -199 V
35 -256 V
36 -508 V
35 361 V
35 598 V
35 29 V
35 213 V
35 -345 V
35 -690 V
35 -35 V
35 1137 V
35 -383 V
35 283 V
35 -546 V
35 -494 V
35 1176 V
35 -167 V
35 47 V
35 -1012 V
721 480 Pls
756 461 Pls
791 658 Pls
826 776 Pls
861 803 Pls
896 720 Pls
931 693 Pls
966 821 Pls
1001 727 Pls
1036 700 Pls
1071 841 Pls
1106 791 Pls
1141 724 Pls
1176 797 Pls
1211 872 Pls
1246 746 Pls
1281 937 Pls
1316 1006 Pls
1351 1077 Pls
1386 998 Pls
1421 1077 Pls
1456 944 Pls
1491 1022 Pls
1526 1113 Pls
1561 1019 Pls
1596 1323 Pls
1631 1292 Pls
1666 1410 Pls
1701 1396 Pls
1737 1179 Pls
1772 1308 Pls
1807 1303 Pls
1842 1326 Pls
1877 1378 Pls
1912 1566 Pls
1947 1231 Pls
1982 1362 Pls
2017 1436 Pls
2052 1491 Pls
2087 1494 Pls
2122 1603 Pls
2157 1618 Pls
2192 1444 Pls
2227 1530 Pls
2262 1408 Pls
2297 1634 Pls
2332 1555 Pls
2367 1717 Pls
2402 1760 Pls
2437 1839 Pls
2472 2202 Pls
2507 1853 Pls
2542 1562 Pls
2577 2152 Pls
2612 2180 Pls
2647 1917 Pls
2682 1914 Pls
2717 1987 Pls
2752 2092 Pls
2787 2156 Pls
2822 2143 Pls
2857 2141 Pls
2892 3406 Pls
2927 2658 Pls
2962 3074 Pls
2997 3248 Pls
3032 3137 Pls
3067 3272 Pls
3102 2535 Pls
3137 2834 Pls
3172 2535 Pls
3207 2840 Pls
3242 2246 Pls
3277 2653 Pls
3312 2644 Pls
3347 2573 Pls
3382 2690 Pls
3417 2329 Pls
3452 2486 Pls
3487 2318 Pls
3522 2382 Pls
3557 2475 Pls
3592 2678 Pls
3627 2629 Pls
3662 3170 Pls
3697 2811 Pls
3732 3217 Pls
3767 2869 Pls
3802 2920 Pls
3838 3381 Pls
3873 3242 Pls
3908 3176 Pls
3943 3545 Pls
3978 3524 Pls
4013 3324 Pls
4048 3919 Pls
4083 3885 Pls
4118 3569 Pls
4153 3395 Pls
4188 2755 Pls
4223 3483 Pls
4258 3433 Pls
4293 3191 Pls
4328 2481 Pls
4363 2937 Pls
4398 3478 Pls
4433 791 Pls
4468 3325 Pls
4503 3396 Pls
4538 3230 Pls
4573 3436 Pls
4608 2816 Pls
4643 2858 Pls
4678 3531 Pls
4713 2879 Pls
4748 3097 Pls
4783 3755 Pls
4818 2907 Pls
4853 3596 Pls
4888 3404 Pls
4923 2458 Pls
4958 3044 Pls
4993 2994 Pls
5028 3234 Pls
5063 3083 Pls
5098 3102 Pls
5133 3347 Pls
5168 3386 Pls
5203 3309 Pls
5238 3057 Pls
5273 2714 Pls
5308 3334 Pls
5343 3370 Pls
5378 3464 Pls
5413 2220 Pls
5448 3641 Pls
5483 3144 Pls
5518 3198 Pls
5553 2815 Pls
5588 3199 Pls
5623 3011 Pls
5658 3039 Pls
5693 3087 Pls
5728 3579 Pls
5763 3200 Pls
5798 3158 Pls
5833 3237 Pls
5868 3038 Pls
5903 2782 Pls
5939 2274 Pls
5974 2635 Pls
6009 3233 Pls
6044 3262 Pls
6079 3475 Pls
6114 3130 Pls
6149 2440 Pls
6184 2405 Pls
6219 3542 Pls
6254 3159 Pls
6289 3442 Pls
6324 2896 Pls
6359 2402 Pls
6394 3578 Pls
6429 3411 Pls
6464 3458 Pls
6499 2446 Pls
1893 4486 Pls
% End plot #1
1.000 UL
LTb
686 4619 N
686 448 L
6303 0 V
0 4171 V
-6303 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
