%!PS-Adobe-2.0
%%Title: images/graphes-recvpackets-mean.ps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Wed Mar  2 17:18:56 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-recvpackets-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (bbrowning)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Mar  2 17:18:56 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
854 448 M
6135 0 V
stroke
LTb
854 448 M
63 0 V
6072 0 R
-63 0 V
770 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 1143 M
6135 0 V
stroke
LTb
854 1143 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 500) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 1838 M
6135 0 V
stroke
LTb
854 1838 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 1000) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 2534 M
6135 0 V
stroke
LTb
854 2534 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 1500) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 3229 M
6135 0 V
stroke
LTb
854 3229 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 2000) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 3924 M
6135 0 V
stroke
LTb
854 3924 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 2500) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 4619 M
6135 0 V
stroke
LTb
854 4619 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 3000) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 448 M
0 4171 V
stroke
LTb
854 448 M
0 63 V
0 4108 R
0 -63 V
854 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
2081 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
2081 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3308 448 M
0 4171 V
stroke
LTb
3308 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4535 448 M
0 4171 V
stroke
LTb
4535 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5762 448 M
0 4171 V
stroke
LTb
5762 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6989 448 M
0 4171 V
stroke
LTb
6989 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTb
854 4619 N
854 448 L
6135 0 V
0 4171 V
-6135 0 V
Z stroke
LCb setrgbcolor
196 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(recvpackets) Cshow
grestore
LTb
LCb setrgbcolor
3921 98 M
(unit = sec ) Cshow
LTb
3921 4829 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
2450 4486 M
(recvpackets@server) Rshow
LT0
2534 4486 M
399 0 V
903 491 M
25 42 V
24 119 V
25 0 V
24 -34 V
25 98 V
24 205 V
25 -113 V
24 54 V
25 -75 V
24 -97 V
25 93 V
25 -4 V
24 -168 V
25 111 V
24 -116 V
25 77 V
24 163 V
25 -176 V
24 -12 V
25 335 V
24 -118 V
25 -256 V
25 149 V
24 155 V
25 123 V
24 -192 V
25 186 V
24 -53 V
25 126 V
24 -141 V
25 -51 V
24 -43 V
25 175 V
24 -253 V
25 18 V
25 -45 V
24 0 V
25 -1 V
24 33 V
25 -14 V
24 187 V
25 -224 V
24 -107 V
25 183 V
24 103 V
25 -82 V
24 -114 V
25 34 V
25 355 V
24 -335 V
25 -25 V
24 -96 V
25 133 V
24 282 V
25 -234 V
24 135 V
25 -97 V
24 -113 V
25 257 V
24 -83 V
25 60 V
25 306 V
24 -487 V
25 179 V
24 52 V
25 30 V
24 -122 V
25 158 V
24 -241 V
25 -57 V
24 475 V
25 -393 V
25 -67 V
24 87 V
25 9 V
24 250 V
25 -428 V
24 235 V
25 -13 V
24 78 V
25 260 V
24 -423 V
25 235 V
24 69 V
25 -306 V
25 190 V
24 -293 V
25 336 V
24 242 V
25 -25 V
24 -158 V
25 -128 V
24 121 V
25 -258 V
24 -33 V
25 22 V
24 6 V
25 121 V
25 -231 V
24 300 V
25 413 V
24 -485 V
stroke 3406 1036 M
25 -196 V
24 391 V
25 -25 V
24 -14 V
25 4 V
24 86 V
25 -204 V
24 267 V
25 -252 V
25 202 V
24 -417 V
25 314 V
24 -149 V
25 -188 V
24 157 V
25 -105 V
24 -109 V
25 499 V
24 -335 V
25 459 V
25 344 V
24 -248 V
25 238 V
24 -502 V
25 65 V
24 -215 V
25 304 V
24 251 V
25 -159 V
24 20 V
25 232 V
24 -374 V
25 301 V
25 -315 V
24 131 V
25 22 V
24 53 V
25 211 V
24 -427 V
25 -44 V
24 557 V
25 -560 V
24 53 V
25 115 V
24 -314 V
25 154 V
25 351 V
24 150 V
25 48 V
24 -546 V
25 435 V
24 -512 V
25 311 V
24 761 V
25 119 V
24 -669 V
25 46 V
24 -239 V
25 -45 V
25 -71 V
24 -274 V
25 160 V
24 535 V
25 -382 V
24 224 V
25 -15 V
24 -31 V
25 -71 V
24 -525 V
25 76 V
25 122 V
24 62 V
25 107 V
24 318 V
25 -278 V
24 553 V
25 -75 V
24 -677 V
25 1074 V
24 393 V
25 136 V
24 141 V
25 414 V
25 495 V
24 -318 V
25 -643 V
24 951 V
25 21 V
24 -235 V
25 -89 V
24 -879 V
25 -50 V
24 1494 V
25 -390 V
24 -129 V
25 -288 V
49 -75 V
25 -435 V
24 708 V
25 592 V
24 -54 V
25 -85 V
24 239 V
25 -1269 V
stroke 5983 3001 M
24 863 V
25 -356 V
24 50 V
25 171 V
25 -110 V
24 -15 V
25 788 V
24 -518 V
25 329 V
24 -422 V
25 168 V
24 188 V
25 -356 V
24 308 V
25 109 V
25 -31 V
24 263 V
25 -1328 V
24 570 V
25 851 V
24 -592 V
25 149 V
24 346 V
25 -608 V
24 150 V
25 387 V
24 -534 V
25 190 V
25 231 V
24 -571 V
25 495 V
24 -1662 V
6793 930 L
24 -393 V
25 -56 V
24 6 V
25 -6 V
24 -4 V
22 0 V
903 491 Pls
928 533 Pls
952 652 Pls
977 652 Pls
1001 618 Pls
1026 716 Pls
1050 921 Pls
1075 808 Pls
1099 862 Pls
1124 787 Pls
1148 690 Pls
1173 783 Pls
1198 779 Pls
1222 611 Pls
1247 722 Pls
1271 606 Pls
1296 683 Pls
1320 846 Pls
1345 670 Pls
1369 658 Pls
1394 993 Pls
1418 875 Pls
1443 619 Pls
1468 768 Pls
1492 923 Pls
1517 1046 Pls
1541 854 Pls
1566 1040 Pls
1590 987 Pls
1615 1113 Pls
1639 972 Pls
1664 921 Pls
1688 878 Pls
1713 1053 Pls
1737 800 Pls
1762 818 Pls
1787 773 Pls
1811 773 Pls
1836 772 Pls
1860 805 Pls
1885 791 Pls
1909 978 Pls
1934 754 Pls
1958 647 Pls
1983 830 Pls
2007 933 Pls
2032 851 Pls
2056 737 Pls
2081 771 Pls
2106 1126 Pls
2130 791 Pls
2155 766 Pls
2179 670 Pls
2204 803 Pls
2228 1085 Pls
2253 851 Pls
2277 986 Pls
2302 889 Pls
2326 776 Pls
2351 1033 Pls
2375 950 Pls
2400 1010 Pls
2425 1316 Pls
2449 829 Pls
2474 1008 Pls
2498 1060 Pls
2523 1090 Pls
2547 968 Pls
2572 1126 Pls
2596 885 Pls
2621 828 Pls
2645 1303 Pls
2670 910 Pls
2695 843 Pls
2719 930 Pls
2744 939 Pls
2768 1189 Pls
2793 761 Pls
2817 996 Pls
2842 983 Pls
2866 1061 Pls
2891 1321 Pls
2915 898 Pls
2940 1133 Pls
2964 1202 Pls
2989 896 Pls
3014 1086 Pls
3038 793 Pls
3063 1129 Pls
3087 1371 Pls
3112 1346 Pls
3136 1188 Pls
3161 1060 Pls
3185 1181 Pls
3210 923 Pls
3234 890 Pls
3259 912 Pls
3283 918 Pls
3308 1039 Pls
3333 808 Pls
3357 1108 Pls
3382 1521 Pls
3406 1036 Pls
3431 840 Pls
3455 1231 Pls
3480 1206 Pls
3504 1192 Pls
3529 1196 Pls
3553 1282 Pls
3578 1078 Pls
3602 1345 Pls
3627 1093 Pls
3652 1295 Pls
3676 878 Pls
3701 1192 Pls
3725 1043 Pls
3750 855 Pls
3774 1012 Pls
3799 907 Pls
3823 798 Pls
3848 1297 Pls
3872 962 Pls
3897 1421 Pls
3922 1765 Pls
3946 1517 Pls
3971 1755 Pls
3995 1253 Pls
4020 1318 Pls
4044 1103 Pls
4069 1407 Pls
4093 1658 Pls
4118 1499 Pls
4142 1519 Pls
4167 1751 Pls
4191 1377 Pls
4216 1678 Pls
4241 1363 Pls
4265 1494 Pls
4290 1516 Pls
4314 1569 Pls
4339 1780 Pls
4363 1353 Pls
4388 1309 Pls
4412 1866 Pls
4437 1306 Pls
4461 1359 Pls
4486 1474 Pls
4510 1160 Pls
4535 1314 Pls
4560 1665 Pls
4584 1815 Pls
4609 1863 Pls
4633 1317 Pls
4658 1752 Pls
4682 1240 Pls
4707 1551 Pls
4731 2312 Pls
4756 2431 Pls
4780 1762 Pls
4805 1808 Pls
4829 1569 Pls
4854 1524 Pls
4879 1453 Pls
4903 1179 Pls
4928 1339 Pls
4952 1874 Pls
4977 1492 Pls
5001 1716 Pls
5026 1701 Pls
5050 1670 Pls
5075 1599 Pls
5099 1074 Pls
5124 1150 Pls
5149 1272 Pls
5173 1334 Pls
5198 1441 Pls
5222 1759 Pls
5247 1481 Pls
5271 2034 Pls
5296 1959 Pls
5320 1282 Pls
5345 2356 Pls
5369 2749 Pls
5394 2885 Pls
5418 3026 Pls
5443 3440 Pls
5468 3935 Pls
5492 3617 Pls
5517 2974 Pls
5541 3925 Pls
5566 3946 Pls
5590 3711 Pls
5615 3622 Pls
5639 2743 Pls
5664 2693 Pls
5688 4187 Pls
5713 3797 Pls
5737 3668 Pls
5762 3380 Pls
5811 3305 Pls
5836 2870 Pls
5860 3578 Pls
5885 4170 Pls
5909 4116 Pls
5934 4031 Pls
5958 4270 Pls
5983 3001 Pls
6007 3864 Pls
6032 3508 Pls
6056 3558 Pls
6081 3729 Pls
6106 3619 Pls
6130 3604 Pls
6155 4392 Pls
6179 3874 Pls
6204 4203 Pls
6228 3781 Pls
6253 3949 Pls
6277 4137 Pls
6302 3781 Pls
6326 4089 Pls
6351 4198 Pls
6376 4167 Pls
6400 4430 Pls
6425 3102 Pls
6449 3672 Pls
6474 4523 Pls
6498 3931 Pls
6523 4080 Pls
6547 4426 Pls
6572 3818 Pls
6596 3968 Pls
6621 4355 Pls
6645 3821 Pls
6670 4011 Pls
6695 4242 Pls
6719 3671 Pls
6744 4166 Pls
6768 2504 Pls
6793 930 Pls
6817 537 Pls
6842 481 Pls
6866 487 Pls
6891 481 Pls
6915 477 Pls
6937 477 Pls
2733 4486 Pls
% End plot #1
1.000 UL
LTb
854 4619 N
854 448 L
6135 0 V
0 4171 V
-6135 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
