%!PS-Adobe-2.0
%%Title: images/graphes-load-mean.ps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Wed Mar  2 17:18:56 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-load-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (bbrowning)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Mar  2 17:18:56 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
686 448 M
6303 0 V
stroke
LTb
686 448 M
63 0 V
6240 0 R
-63 0 V
602 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 1143 M
6303 0 V
stroke
LTb
686 1143 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 2) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 1838 M
6303 0 V
stroke
LTb
686 1838 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 4) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 2534 M
6303 0 V
stroke
LTb
686 2534 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 6) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 3229 M
6303 0 V
stroke
LTb
686 3229 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 8) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 3924 M
6303 0 V
stroke
LTb
686 3924 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 10) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 4619 M
6303 0 V
stroke
LTb
686 4619 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 12) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 448 M
0 4171 V
stroke
LTb
686 448 M
0 63 V
0 4108 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1947 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
1947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3207 448 M
0 4171 V
stroke
LTb
3207 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4468 448 M
0 4171 V
stroke
LTb
4468 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5728 448 M
0 4171 V
stroke
LTb
5728 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6989 448 M
0 4171 V
stroke
LTb
6989 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4619 N
686 448 L
6303 0 V
0 4171 V
-6303 0 V
Z stroke
LCb setrgbcolor
196 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(load) Cshow
grestore
LTb
LCb setrgbcolor
3837 98 M
(unit = sec ) Cshow
LTb
3837 4829 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
1694 4486 M
(load@server) Rshow
LT0
1778 4486 M
399 0 V
711 611 M
25 0 V
26 28 V
25 0 V
25 -4 V
25 -2 V
25 55 V
26 17 V
25 -14 V
25 -14 V
25 -6 V
26 -36 V
25 -2 V
25 -29 V
25 0 V
25 -24 V
26 -21 V
25 11 V
25 34 V
25 4 V
25 -24 V
26 2 V
25 9 V
25 31 V
25 -29 V
26 4 V
25 56 V
25 48 V
25 -10 V
25 -13 V
26 -9 V
25 -34 V
25 25 V
25 20 V
25 -11 V
26 -34 V
25 -31 V
25 -24 V
25 7 V
25 31 V
26 24 V
25 -31 V
25 3 V
25 0 V
26 28 V
25 -7 V
25 52 V
25 -9 V
25 -11 V
26 -36 V
25 -2 V
25 0 V
25 0 V
25 87 V
26 -18 V
25 -38 V
25 -7 V
25 -35 V
26 -25 V
25 -24 V
25 7 V
25 -21 V
25 11 V
26 34 V
25 4 V
25 3 V
25 84 V
25 14 V
26 -11 V
25 15 V
25 13 V
25 38 V
25 28 V
26 0 V
25 -52 V
25 11 V
25 7 V
26 2 V
25 -20 V
25 -18 V
25 11 V
25 -18 V
26 -17 V
25 15 V
25 -15 V
25 -10 V
25 17 V
26 42 V
25 6 V
25 32 V
25 0 V
26 4 V
25 0 V
25 -25 V
25 -20 V
25 7 V
26 7 V
25 6 V
25 32 V
25 -25 V
25 -24 V
26 -21 V
25 -17 V
stroke 3283 709 M
25 42 V
25 -22 V
25 11 V
26 -18 V
25 -13 V
25 11 V
25 9 V
26 -41 V
25 70 V
25 6 V
25 -20 V
25 7 V
26 7 V
25 -22 V
25 8 V
25 7 V
25 7 V
26 6 V
25 4 V
25 32 V
25 27 V
26 -7 V
25 24 V
25 18 V
25 -11 V
25 105 V
26 -25 V
25 -21 V
25 142 V
25 -41 V
25 21 V
26 -11 V
25 -62 V
25 -52 V
25 -18 V
25 67 V
26 -25 V
25 -21 V
25 91 V
25 -32 V
26 -27 V
25 3 V
25 4 V
25 3 V
25 59 V
26 -35 V
25 -51 V
25 89 V
25 -87 V
25 -20 V
26 7 V
25 -45 V
25 -11 V
25 -11 V
25 -34 V
26 -4 V
25 25 V
25 21 V
25 -8 V
26 46 V
25 -15 V
25 -13 V
25 45 V
25 35 V
26 4 V
25 -24 V
25 31 V
25 51 V
25 18 V
26 73 V
25 -49 V
25 -38 V
25 18 V
26 -11 V
25 21 V
25 13 V
25 15 V
25 121 V
26 -34 V
25 114 V
25 -24 V
25 87 V
25 211 V
26 -114 V
25 114 V
25 47 V
25 31 V
25 305 V
26 31 V
25 5 V
25 -25 V
25 -98 V
26 -104 V
25 338 V
25 180 V
25 -142 V
25 -125 V
51 -185 V
25 11 V
25 221 V
25 268 V
26 147 V
25 55 V
25 118 V
stroke 5930 2620 M
25 -24 V
26 105 V
25 -212 V
25 -11 V
25 7 V
25 -157 V
26 119 V
25 254 V
25 86 V
25 230 V
25 191 V
26 139 V
25 138 V
25 98 V
25 53 V
25 41 V
26 93 V
25 -350 V
25 -432 V
25 310 V
26 149 V
25 125 V
25 84 V
25 94 V
25 60 V
26 41 V
25 90 V
25 52 V
25 42 V
25 11 V
26 7 V
25 89 V
25 22 V
25 -543 V
26 -406 V
25 -425 V
25 -361 V
25 -278 V
25 -379 V
23 -177 V
711 611 Pls
736 611 Pls
762 639 Pls
787 639 Pls
812 635 Pls
837 633 Pls
862 688 Pls
888 705 Pls
913 691 Pls
938 677 Pls
963 671 Pls
989 635 Pls
1014 633 Pls
1039 604 Pls
1064 604 Pls
1089 580 Pls
1115 559 Pls
1140 570 Pls
1165 604 Pls
1190 608 Pls
1215 584 Pls
1241 586 Pls
1266 595 Pls
1291 626 Pls
1316 597 Pls
1342 601 Pls
1367 657 Pls
1392 705 Pls
1417 695 Pls
1442 682 Pls
1468 673 Pls
1493 639 Pls
1518 664 Pls
1543 684 Pls
1568 673 Pls
1594 639 Pls
1619 608 Pls
1644 584 Pls
1669 591 Pls
1694 622 Pls
1720 646 Pls
1745 615 Pls
1770 618 Pls
1795 618 Pls
1821 646 Pls
1846 639 Pls
1871 691 Pls
1896 682 Pls
1921 671 Pls
1947 635 Pls
1972 633 Pls
1997 633 Pls
2022 633 Pls
2047 720 Pls
2073 702 Pls
2098 664 Pls
2123 657 Pls
2148 622 Pls
2174 597 Pls
2199 573 Pls
2224 580 Pls
2249 559 Pls
2274 570 Pls
2300 604 Pls
2325 608 Pls
2350 611 Pls
2375 695 Pls
2400 709 Pls
2426 698 Pls
2451 713 Pls
2476 726 Pls
2501 764 Pls
2526 792 Pls
2552 792 Pls
2577 740 Pls
2602 751 Pls
2627 758 Pls
2653 760 Pls
2678 740 Pls
2703 722 Pls
2728 733 Pls
2753 715 Pls
2779 698 Pls
2804 713 Pls
2829 698 Pls
2854 688 Pls
2879 705 Pls
2905 747 Pls
2930 753 Pls
2955 785 Pls
2980 785 Pls
3006 789 Pls
3031 789 Pls
3056 764 Pls
3081 744 Pls
3106 751 Pls
3132 758 Pls
3157 764 Pls
3182 796 Pls
3207 771 Pls
3232 747 Pls
3258 726 Pls
3283 709 Pls
3308 751 Pls
3333 729 Pls
3358 740 Pls
3384 722 Pls
3409 709 Pls
3434 720 Pls
3459 729 Pls
3485 688 Pls
3510 758 Pls
3535 764 Pls
3560 744 Pls
3585 751 Pls
3611 758 Pls
3636 736 Pls
3661 744 Pls
3686 751 Pls
3711 758 Pls
3737 764 Pls
3762 768 Pls
3787 800 Pls
3812 827 Pls
3838 820 Pls
3863 844 Pls
3888 862 Pls
3913 851 Pls
3938 956 Pls
3964 931 Pls
3989 910 Pls
4014 1052 Pls
4039 1011 Pls
4064 1032 Pls
4090 1021 Pls
4115 959 Pls
4140 907 Pls
4165 889 Pls
4190 956 Pls
4216 931 Pls
4241 910 Pls
4266 1001 Pls
4291 969 Pls
4317 942 Pls
4342 945 Pls
4367 949 Pls
4392 952 Pls
4417 1011 Pls
4443 976 Pls
4468 925 Pls
4493 1014 Pls
4518 927 Pls
4543 907 Pls
4569 914 Pls
4594 869 Pls
4619 858 Pls
4644 847 Pls
4669 813 Pls
4695 809 Pls
4720 834 Pls
4745 855 Pls
4770 847 Pls
4796 893 Pls
4821 878 Pls
4846 865 Pls
4871 910 Pls
4896 945 Pls
4922 949 Pls
4947 925 Pls
4972 956 Pls
4997 1007 Pls
5022 1025 Pls
5048 1098 Pls
5073 1049 Pls
5098 1011 Pls
5123 1029 Pls
5149 1018 Pls
5174 1039 Pls
5199 1052 Pls
5224 1067 Pls
5249 1188 Pls
5275 1154 Pls
5300 1268 Pls
5325 1244 Pls
5350 1331 Pls
5375 1542 Pls
5401 1428 Pls
5426 1542 Pls
5451 1589 Pls
5476 1620 Pls
5501 1925 Pls
5527 1956 Pls
5552 1961 Pls
5577 1936 Pls
5602 1838 Pls
5628 1734 Pls
5653 2072 Pls
5678 2252 Pls
5703 2110 Pls
5728 1985 Pls
5779 1800 Pls
5804 1811 Pls
5829 2032 Pls
5854 2300 Pls
5880 2447 Pls
5905 2502 Pls
5930 2620 Pls
5955 2596 Pls
5981 2701 Pls
6006 2489 Pls
6031 2478 Pls
6056 2485 Pls
6081 2328 Pls
6107 2447 Pls
6132 2701 Pls
6157 2787 Pls
6182 3017 Pls
6207 3208 Pls
6233 3347 Pls
6258 3485 Pls
6283 3583 Pls
6308 3636 Pls
6333 3677 Pls
6359 3770 Pls
6384 3420 Pls
6409 2988 Pls
6434 3298 Pls
6460 3447 Pls
6485 3572 Pls
6510 3656 Pls
6535 3750 Pls
6560 3810 Pls
6586 3851 Pls
6611 3941 Pls
6636 3993 Pls
6661 4035 Pls
6686 4046 Pls
6712 4053 Pls
6737 4142 Pls
6762 4164 Pls
6787 3621 Pls
6813 3215 Pls
6838 2790 Pls
6863 2429 Pls
6888 2151 Pls
6913 1772 Pls
6936 1595 Pls
1977 4486 Pls
% End plot #1
1.000 UL
LTb
686 4619 N
686 448 L
6303 0 V
0 4171 V
-6303 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
