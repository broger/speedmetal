%!PS-Adobe-2.0
%%Title: images/graphes-load-mean.ps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Wed Mar  2 12:35:24 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-load-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (bbrowning)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Mar  2 12:35:24 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
770 448 M
6219 0 V
stroke
LTb
770 448 M
63 0 V
6156 0 R
-63 0 V
686 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 911 M
6219 0 V
stroke
LTb
770 911 M
63 0 V
6156 0 R
-63 0 V
686 911 M
( 0.5) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 1375 M
6219 0 V
stroke
LTb
770 1375 M
63 0 V
6156 0 R
-63 0 V
-6240 0 R
( 1) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 1838 M
6219 0 V
stroke
LTb
770 1838 M
63 0 V
6156 0 R
-63 0 V
-6240 0 R
( 1.5) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 2302 M
6219 0 V
stroke
LTb
770 2302 M
63 0 V
6156 0 R
-63 0 V
-6240 0 R
( 2) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 2765 M
6219 0 V
stroke
LTb
770 2765 M
63 0 V
6156 0 R
-63 0 V
-6240 0 R
( 2.5) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 3229 M
6219 0 V
stroke
LTb
770 3229 M
63 0 V
6156 0 R
-63 0 V
-6240 0 R
( 3) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 3692 M
6219 0 V
stroke
LTb
770 3692 M
63 0 V
6156 0 R
-63 0 V
-6240 0 R
( 3.5) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 4156 M
6219 0 V
stroke
LTb
770 4156 M
63 0 V
6156 0 R
-63 0 V
-6240 0 R
( 4) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 4619 M
6219 0 V
stroke
LTb
770 4619 M
63 0 V
6156 0 R
-63 0 V
-6240 0 R
( 4.5) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 448 M
0 4171 V
stroke
LTb
770 448 M
0 63 V
0 4108 R
0 -63 V
770 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
2014 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
2014 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3258 448 M
0 4171 V
stroke
LTb
3258 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4501 448 M
0 4171 V
stroke
LTb
4501 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5745 448 M
0 4171 V
stroke
LTb
5745 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6989 448 M
0 4171 V
stroke
LTb
6989 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTb
770 4619 N
770 448 L
6219 0 V
0 4171 V
-6219 0 V
Z stroke
LCb setrgbcolor
196 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(load) Cshow
grestore
LTb
LCb setrgbcolor
3879 98 M
(unit = sec ) Cshow
LTb
3879 4829 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
1778 4486 M
(load@server) Rshow
LT0
1862 4486 M
399 0 V
795 495 M
25 -11 V
25 225 V
25 380 V
24 108 V
25 -119 V
25 119 V
25 19 V
25 -109 V
25 -36 V
25 43 V
25 -101 V
24 -18 V
25 -18 V
25 130 V
25 -29 V
25 47 V
25 29 V
25 -29 V
25 177 V
24 84 V
25 286 V
25 94 V
25 -65 V
25 25 V
25 -54 V
25 29 V
25 -131 V
24 -166 V
25 -76 V
25 -65 V
25 11 V
25 -120 V
25 25 V
25 -18 V
25 102 V
24 -55 V
25 -54 V
25 36 V
25 26 V
25 177 V
25 -72 V
25 0 V
25 0 V
24 -66 V
25 19 V
25 18 V
25 242 V
25 322 V
25 0 V
25 66 V
25 65 V
24 -243 V
25 -54 V
25 -120 V
25 -101 V
25 -83 V
25 -84 V
25 -57 V
25 83 V
24 11 V
25 -65 V
25 -58 V
25 -44 V
25 102 V
25 18 V
25 18 V
25 76 V
24 -65 V
25 0 V
25 -66 V
25 -58 V
25 29 V
25 -47 V
25 -36 V
25 -36 V
24 -101 V
25 -11 V
25 130 V
25 -36 V
25 -29 V
25 -94 V
25 58 V
25 -18 V
24 -11 V
25 54 V
25 -90 V
25 -77 V
25 77 V
25 -11 V
25 65 V
25 -18 V
24 -84 V
25 0 V
25 11 V
25 127 V
25 58 V
25 -101 V
25 65 V
25 -29 V
24 -94 V
25 -84 V
25 11 V
stroke 3332 875 M
25 84 V
25 -84 V
25 -65 V
25 18 V
25 11 V
24 18 V
25 73 V
25 76 V
25 -22 V
25 -7 V
25 -11 V
25 65 V
25 -18 V
24 130 V
25 -36 V
25 36 V
25 -29 V
25 102 V
25 94 V
25 18 V
25 11 V
25 -76 V
24 11 V
25 18 V
25 -131 V
25 29 V
25 -47 V
25 94 V
25 -47 V
25 -47 V
24 36 V
25 29 V
25 29 V
25 18 V
25 -123 V
25 -36 V
25 -101 V
25 -11 V
24 -83 V
25 83 V
25 261 V
25 -48 V
25 178 V
25 286 V
25 83 V
25 -54 V
24 -130 V
25 -102 V
25 -11 V
25 -7 V
25 -83 V
25 0 V
25 -141 V
25 -44 V
24 -112 V
25 -29 V
25 -18 V
25 119 V
25 -25 V
25 -29 V
25 47 V
25 177 V
24 84 V
25 0 V
25 126 V
25 113 V
25 -113 V
25 -18 V
25 -18 V
25 -7 V
24 -22 V
25 207 V
25 112 V
25 -65 V
25 -196 V
25 131 V
25 -47 V
25 119 V
24 83 V
25 232 V
25 119 V
25 -191 V
25 54 V
25 -18 V
25 -214 V
25 11 V
24 72 V
25 -7 V
25 83 V
25 -21 V
25 58 V
25 119 V
25 102 V
25 18 V
24 231 V
25 207 V
25 -58 V
25 -257 V
25 -76 V
25 11 V
25 304 V
25 -36 V
24 112 V
25 7 V
stroke 5919 2653 M
25 83 V
25 -213 V
25 47 V
25 29 V
25 -185 V
25 268 V
24 11 V
25 -131 V
50 464 V
25 -40 V
25 337 V
25 -11 V
25 119 V
24 725 V
25 -279 V
25 -167 V
25 0 V
25 -351 V
25 637 V
25 485 V
25 0 V
24 -485 V
25 -192 V
25 -373 V
25 -43 V
25 358 V
25 66 V
25 271 V
25 0 V
24 -492 V
25 -344 V
25 -214 V
25 -398 V
795 495 Pls
820 484 Pls
845 709 Pls
870 1089 Pls
894 1197 Pls
919 1078 Pls
944 1197 Pls
969 1216 Pls
994 1107 Pls
1019 1071 Pls
1044 1114 Pls
1069 1013 Pls
1093 995 Pls
1118 977 Pls
1143 1107 Pls
1168 1078 Pls
1193 1125 Pls
1218 1154 Pls
1243 1125 Pls
1268 1302 Pls
1292 1386 Pls
1317 1672 Pls
1342 1766 Pls
1367 1701 Pls
1392 1726 Pls
1417 1672 Pls
1442 1701 Pls
1467 1570 Pls
1491 1404 Pls
1516 1328 Pls
1541 1263 Pls
1566 1274 Pls
1591 1154 Pls
1616 1179 Pls
1641 1161 Pls
1666 1263 Pls
1690 1208 Pls
1715 1154 Pls
1740 1190 Pls
1765 1216 Pls
1790 1393 Pls
1815 1321 Pls
1840 1321 Pls
1865 1321 Pls
1889 1255 Pls
1914 1274 Pls
1939 1292 Pls
1964 1534 Pls
1989 1856 Pls
2014 1856 Pls
2039 1922 Pls
2064 1987 Pls
2088 1744 Pls
2113 1690 Pls
2138 1570 Pls
2163 1469 Pls
2188 1386 Pls
2213 1302 Pls
2238 1245 Pls
2263 1328 Pls
2287 1339 Pls
2312 1274 Pls
2337 1216 Pls
2362 1172 Pls
2387 1274 Pls
2412 1292 Pls
2437 1310 Pls
2462 1386 Pls
2486 1321 Pls
2511 1321 Pls
2536 1255 Pls
2561 1197 Pls
2586 1226 Pls
2611 1179 Pls
2636 1143 Pls
2661 1107 Pls
2685 1006 Pls
2710 995 Pls
2735 1125 Pls
2760 1089 Pls
2785 1060 Pls
2810 966 Pls
2835 1024 Pls
2860 1006 Pls
2884 995 Pls
2909 1049 Pls
2934 959 Pls
2959 882 Pls
2984 959 Pls
3009 948 Pls
3034 1013 Pls
3059 995 Pls
3083 911 Pls
3108 911 Pls
3133 922 Pls
3158 1049 Pls
3183 1107 Pls
3208 1006 Pls
3233 1071 Pls
3258 1042 Pls
3282 948 Pls
3307 864 Pls
3332 875 Pls
3357 959 Pls
3382 875 Pls
3407 810 Pls
3432 828 Pls
3457 839 Pls
3481 857 Pls
3506 930 Pls
3531 1006 Pls
3556 984 Pls
3581 977 Pls
3606 966 Pls
3631 1031 Pls
3656 1013 Pls
3680 1143 Pls
3705 1107 Pls
3730 1143 Pls
3755 1114 Pls
3780 1216 Pls
3805 1310 Pls
3830 1328 Pls
3855 1339 Pls
3880 1263 Pls
3904 1274 Pls
3929 1292 Pls
3954 1161 Pls
3979 1190 Pls
4004 1143 Pls
4029 1237 Pls
4054 1190 Pls
4079 1143 Pls
4103 1179 Pls
4128 1208 Pls
4153 1237 Pls
4178 1255 Pls
4203 1132 Pls
4228 1096 Pls
4253 995 Pls
4278 984 Pls
4302 901 Pls
4327 984 Pls
4352 1245 Pls
4377 1197 Pls
4402 1375 Pls
4427 1661 Pls
4452 1744 Pls
4477 1690 Pls
4501 1560 Pls
4526 1458 Pls
4551 1447 Pls
4576 1440 Pls
4601 1357 Pls
4626 1357 Pls
4651 1216 Pls
4676 1172 Pls
4700 1060 Pls
4725 1031 Pls
4750 1013 Pls
4775 1132 Pls
4800 1107 Pls
4825 1078 Pls
4850 1125 Pls
4875 1302 Pls
4899 1386 Pls
4924 1386 Pls
4949 1512 Pls
4974 1625 Pls
4999 1512 Pls
5024 1494 Pls
5049 1476 Pls
5074 1469 Pls
5098 1447 Pls
5123 1654 Pls
5148 1766 Pls
5173 1701 Pls
5198 1505 Pls
5223 1636 Pls
5248 1589 Pls
5273 1708 Pls
5297 1791 Pls
5322 2023 Pls
5347 2142 Pls
5372 1951 Pls
5397 2005 Pls
5422 1987 Pls
5447 1773 Pls
5472 1784 Pls
5496 1856 Pls
5521 1849 Pls
5546 1932 Pls
5571 1911 Pls
5596 1969 Pls
5621 2088 Pls
5646 2190 Pls
5671 2208 Pls
5695 2439 Pls
5720 2646 Pls
5745 2588 Pls
5770 2331 Pls
5795 2255 Pls
5820 2266 Pls
5845 2570 Pls
5870 2534 Pls
5894 2646 Pls
5919 2653 Pls
5944 2736 Pls
5969 2523 Pls
5994 2570 Pls
6019 2599 Pls
6044 2414 Pls
6069 2682 Pls
6093 2693 Pls
6118 2562 Pls
6168 3026 Pls
6193 2986 Pls
6218 3323 Pls
6243 3312 Pls
6268 3431 Pls
6292 4156 Pls
6317 3877 Pls
6342 3710 Pls
6367 3710 Pls
6392 3359 Pls
6417 3996 Pls
6442 4481 Pls
6467 4481 Pls
6491 3996 Pls
6516 3804 Pls
6541 3431 Pls
6566 3388 Pls
6591 3746 Pls
6616 3812 Pls
6641 4083 Pls
6666 4083 Pls
6690 3591 Pls
6715 3247 Pls
6740 3033 Pls
6765 2635 Pls
2061 4486 Pls
% End plot #1
1.000 UL
LTb
770 4619 N
770 448 L
6219 0 V
0 4171 V
-6219 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
