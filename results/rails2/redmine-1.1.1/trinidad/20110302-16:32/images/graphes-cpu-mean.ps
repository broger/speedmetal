%!PS-Adobe-2.0
%%Title: images/graphes-cpu-mean.ps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Wed Mar  2 12:35:24 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-cpu-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (bbrowning)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Mar  2 12:35:24 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
686 448 M
6303 0 V
stroke
LTb
686 448 M
63 0 V
6240 0 R
-63 0 V
602 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 1044 M
6303 0 V
stroke
LTb
686 1044 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 10) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 1640 M
6303 0 V
stroke
LTb
686 1640 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 20) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 2236 M
6303 0 V
stroke
LTb
686 2236 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 30) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 2831 M
6303 0 V
stroke
LTb
686 2831 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 40) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 3427 M
6303 0 V
stroke
LTb
686 3427 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 50) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 4023 M
6303 0 V
stroke
LTb
686 4023 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 60) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 4619 M
6303 0 V
stroke
LTb
686 4619 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 70) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 448 M
0 4171 V
stroke
LTb
686 448 M
0 63 V
0 4108 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1947 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
1947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3207 448 M
0 4171 V
stroke
LTb
3207 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4468 448 M
0 4171 V
stroke
LTb
4468 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5728 448 M
0 4171 V
stroke
LTb
5728 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6989 448 M
0 4171 V
stroke
LTb
6989 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4619 N
686 448 L
6303 0 V
0 4171 V
-6303 0 V
Z stroke
LCb setrgbcolor
196 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(cpu) Cshow
grestore
LTb
LCb setrgbcolor
3837 98 M
(unit = sec ) Cshow
LTb
3837 4829 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
1610 4486 M
(cpu@server) Rshow
LT0
1694 4486 M
399 0 V
711 665 M
736 492 L
26 683 V
25 240 V
812 775 L
25 122 V
25 0 V
26 -64 V
913 721 L
25 89 V
25 -80 V
26 211 V
25 105 V
25 -192 V
25 64 V
25 -159 V
26 -114 V
25 2 V
25 1 V
25 229 V
25 -99 V
26 38 V
25 10 V
25 126 V
25 -53 V
26 -180 V
25 136 V
25 -199 V
25 19 V
25 80 V
26 -34 V
25 98 V
25 -123 V
25 184 V
25 -165 V
26 15 V
25 81 V
25 -73 V
25 -70 V
25 72 V
26 36 V
25 -43 V
25 -30 V
25 -121 V
26 131 V
25 -36 V
25 59 V
25 222 V
25 -141 V
26 57 V
25 -139 V
25 -26 V
25 -60 V
25 185 V
26 48 V
25 -115 V
25 -101 V
25 135 V
26 79 V
25 252 V
25 -206 V
25 -63 V
25 13 V
26 -58 V
25 -4 V
25 -64 V
25 126 V
25 -189 V
26 239 V
25 86 V
25 -233 V
25 56 V
25 -88 V
26 105 V
25 21 V
25 -43 V
25 118 V
26 50 V
25 -163 V
25 371 V
25 -331 V
25 -199 V
26 110 V
25 -4 V
25 91 V
25 -39 V
25 -31 V
26 -55 V
25 111 V
25 110 V
25 -13 V
26 -29 V
25 120 V
25 -103 V
25 -73 V
25 -97 V
26 44 V
25 -110 V
25 205 V
25 -241 V
25 103 V
26 148 V
25 -65 V
25 52 V
25 -289 V
25 101 V
26 -10 V
25 11 V
25 10 V
25 -74 V
26 48 V
25 165 V
25 -55 V
stroke 3535 817 M
25 25 V
25 -170 V
26 9 V
25 45 V
25 190 V
25 -51 V
25 318 V
26 -74 V
25 -86 V
25 -31 V
25 139 V
26 5 V
25 -121 V
25 2 V
25 150 V
25 438 V
26 -335 V
25 -52 V
25 -28 V
25 -121 V
25 -57 V
26 202 V
25 -420 V
25 -10 V
25 61 V
25 498 V
26 -369 V
25 -213 V
25 55 V
25 266 V
26 -39 V
25 107 V
25 -106 V
25 135 V
25 -190 V
26 199 V
25 -203 V
25 480 V
25 -361 V
25 -46 V
26 524 V
25 -270 V
25 -208 V
25 -165 V
25 -191 V
26 141 V
25 62 V
25 409 V
25 -315 V
26 -48 V
25 6 V
25 296 V
25 36 V
25 -367 V
26 387 V
25 96 V
25 25 V
25 -187 V
25 -271 V
26 118 V
25 -91 V
25 49 V
25 162 V
26 -188 V
25 -21 V
25 545 V
25 69 V
25 175 V
26 191 V
25 -218 V
25 504 V
25 -350 V
25 346 V
26 -775 V
25 622 V
25 1848 V
25 -1440 V
25 -396 V
26 -757 V
25 477 V
25 -447 V
25 294 V
26 -70 V
25 713 V
25 -1082 V
25 2149 V
25 -1085 V
26 45 V
25 -490 V
25 33 V
25 1243 V
25 -191 V
26 -459 V
25 -59 V
25 -11 V
25 -1 V
26 -532 V
25 439 V
25 180 V
25 32 V
25 -333 V
26 123 V
50 1412 V
25 -711 V
stroke 6182 3080 M
25 2 V
26 -624 V
25 1018 V
25 454 V
25 -1231 V
25 413 V
26 241 V
25 77 V
25 1046 V
25 -200 V
26 -1442 V
25 -28 V
25 651 V
25 120 V
25 -603 V
26 510 V
25 1082 V
25 -1273 V
25 -1384 V
25 -491 V
26 -474 V
25 -183 V
25 -271 V
711 665 Pls
736 492 Pls
762 1175 Pls
787 1415 Pls
812 775 Pls
837 897 Pls
862 897 Pls
888 833 Pls
913 721 Pls
938 810 Pls
963 730 Pls
989 941 Pls
1014 1046 Pls
1039 854 Pls
1064 918 Pls
1089 759 Pls
1115 645 Pls
1140 647 Pls
1165 648 Pls
1190 877 Pls
1215 778 Pls
1241 816 Pls
1266 826 Pls
1291 952 Pls
1316 899 Pls
1342 719 Pls
1367 855 Pls
1392 656 Pls
1417 675 Pls
1442 755 Pls
1468 721 Pls
1493 819 Pls
1518 696 Pls
1543 880 Pls
1568 715 Pls
1594 730 Pls
1619 811 Pls
1644 738 Pls
1669 668 Pls
1694 740 Pls
1720 776 Pls
1745 733 Pls
1770 703 Pls
1795 582 Pls
1821 713 Pls
1846 677 Pls
1871 736 Pls
1896 958 Pls
1921 817 Pls
1947 874 Pls
1972 735 Pls
1997 709 Pls
2022 649 Pls
2047 834 Pls
2073 882 Pls
2098 767 Pls
2123 666 Pls
2148 801 Pls
2174 880 Pls
2199 1132 Pls
2224 926 Pls
2249 863 Pls
2274 876 Pls
2300 818 Pls
2325 814 Pls
2350 750 Pls
2375 876 Pls
2400 687 Pls
2426 926 Pls
2451 1012 Pls
2476 779 Pls
2501 835 Pls
2526 747 Pls
2552 852 Pls
2577 873 Pls
2602 830 Pls
2627 948 Pls
2653 998 Pls
2678 835 Pls
2703 1206 Pls
2728 875 Pls
2753 676 Pls
2779 786 Pls
2804 782 Pls
2829 873 Pls
2854 834 Pls
2879 803 Pls
2905 748 Pls
2930 859 Pls
2955 969 Pls
2980 956 Pls
3006 927 Pls
3031 1047 Pls
3056 944 Pls
3081 871 Pls
3106 774 Pls
3132 818 Pls
3157 708 Pls
3182 913 Pls
3207 672 Pls
3232 775 Pls
3258 923 Pls
3283 858 Pls
3308 910 Pls
3333 621 Pls
3358 722 Pls
3384 712 Pls
3409 723 Pls
3434 733 Pls
3459 659 Pls
3485 707 Pls
3510 872 Pls
3535 817 Pls
3560 842 Pls
3585 672 Pls
3611 681 Pls
3636 726 Pls
3661 916 Pls
3686 865 Pls
3711 1183 Pls
3737 1109 Pls
3762 1023 Pls
3787 992 Pls
3812 1131 Pls
3838 1136 Pls
3863 1015 Pls
3888 1017 Pls
3913 1167 Pls
3938 1605 Pls
3964 1270 Pls
3989 1218 Pls
4014 1190 Pls
4039 1069 Pls
4064 1012 Pls
4090 1214 Pls
4115 794 Pls
4140 784 Pls
4165 845 Pls
4190 1343 Pls
4216 974 Pls
4241 761 Pls
4266 816 Pls
4291 1082 Pls
4317 1043 Pls
4342 1150 Pls
4367 1044 Pls
4392 1179 Pls
4417 989 Pls
4443 1188 Pls
4468 985 Pls
4493 1465 Pls
4518 1104 Pls
4543 1058 Pls
4569 1582 Pls
4594 1312 Pls
4619 1104 Pls
4644 939 Pls
4669 748 Pls
4695 889 Pls
4720 951 Pls
4745 1360 Pls
4770 1045 Pls
4796 997 Pls
4821 1003 Pls
4846 1299 Pls
4871 1335 Pls
4896 968 Pls
4922 1355 Pls
4947 1451 Pls
4972 1476 Pls
4997 1289 Pls
5022 1018 Pls
5048 1136 Pls
5073 1045 Pls
5098 1094 Pls
5123 1256 Pls
5149 1068 Pls
5174 1047 Pls
5199 1592 Pls
5224 1661 Pls
5249 1836 Pls
5275 2027 Pls
5300 1809 Pls
5325 2313 Pls
5350 1963 Pls
5375 2309 Pls
5401 1534 Pls
5426 2156 Pls
5451 4004 Pls
5476 2564 Pls
5501 2168 Pls
5527 1411 Pls
5552 1888 Pls
5577 1441 Pls
5602 1735 Pls
5628 1665 Pls
5653 2378 Pls
5678 1296 Pls
5703 3445 Pls
5728 2360 Pls
5754 2405 Pls
5779 1915 Pls
5804 1948 Pls
5829 3191 Pls
5854 3000 Pls
5880 2541 Pls
5905 2482 Pls
5930 2471 Pls
5955 2470 Pls
5981 1938 Pls
6006 2377 Pls
6031 2557 Pls
6056 2589 Pls
6081 2256 Pls
6107 2379 Pls
6157 3791 Pls
6182 3080 Pls
6207 3082 Pls
6233 2458 Pls
6258 3476 Pls
6283 3930 Pls
6308 2699 Pls
6333 3112 Pls
6359 3353 Pls
6384 3430 Pls
6409 4476 Pls
6434 4276 Pls
6460 2834 Pls
6485 2806 Pls
6510 3457 Pls
6535 3577 Pls
6560 2974 Pls
6586 3484 Pls
6611 4566 Pls
6636 3293 Pls
6661 1909 Pls
6686 1418 Pls
6712 944 Pls
6737 761 Pls
6762 490 Pls
1893 4486 Pls
% End plot #1
1.000 UL
LTb
686 4619 N
686 448 L
6303 0 V
0 4171 V
-6303 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
