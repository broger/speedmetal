%!PS-Adobe-2.0
%%Title: images/graphes-load-min_sample.ps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Fri Mar 11 15:40:50 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-load-min_sample.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (bbrowning)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Mar 11 15:40:50 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
854 448 M
6135 0 V
stroke
LTb
854 448 M
63 0 V
6072 0 R
-63 0 V
770 448 M
( 0.46) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 865 M
6135 0 V
stroke
LTb
854 865 M
63 0 V
6072 0 R
-63 0 V
770 865 M
( 0.47) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 1282 M
6135 0 V
stroke
LTb
854 1282 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 0.48) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 1699 M
6135 0 V
stroke
LTb
854 1699 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 0.49) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 2116 M
6135 0 V
stroke
LTb
854 2116 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 0.5) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 2533 M
6135 0 V
stroke
LTb
854 2533 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 0.51) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 2951 M
6135 0 V
stroke
LTb
854 2951 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 0.52) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 3368 M
6135 0 V
stroke
LTb
854 3368 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 0.53) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 3785 M
6135 0 V
stroke
LTb
854 3785 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 0.54) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 4202 M
6135 0 V
stroke
LTb
854 4202 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 0.55) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 4619 M
6135 0 V
stroke
LTb
854 4619 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 0.56) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 448 M
0 4171 V
stroke
LTb
854 448 M
0 63 V
0 4108 R
0 -63 V
854 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1536 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
1536 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
2217 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
2217 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
2899 448 M
0 4171 V
stroke
LTb
2899 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3581 448 M
0 4171 V
stroke
LTb
3581 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4262 448 M
0 4171 V
stroke
LTb
4262 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTa
4944 448 M
0 4171 V
stroke
LTb
4944 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 3000) Cshow
1.000 UL
LTb
1.000 UL
LTa
5626 448 M
0 4171 V
stroke
LTb
5626 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 3500) Cshow
1.000 UL
LTb
1.000 UL
LTa
6307 448 M
0 4171 V
stroke
LTb
6307 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 4000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6989 448 M
0 4171 V
stroke
LTb
6989 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 4500) Cshow
1.000 UL
LTb
1.000 UL
LTb
854 4619 N
854 448 L
6135 0 V
0 4171 V
-6135 0 V
Z stroke
LCb setrgbcolor
196 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(load) Cshow
grestore
LTb
LCb setrgbcolor
3921 98 M
(unit = sec ) Cshow
LTb
3921 4829 M
( min_sample) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
1862 4486 M
(load@server) Rshow
LT0
1946 4486 M
399 0 V
868 4560 M
881 813 L
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
stroke 2299 813 M
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
stroke 3717 813 M
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
27 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
stroke 5149 813 M
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
28 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
13 0 V
14 0 V
14 0 V
13 0 V
14 0 V
868 4560 Pls
881 813 Pls
895 813 Pls
909 813 Pls
922 813 Pls
936 813 Pls
949 813 Pls
963 813 Pls
977 813 Pls
990 813 Pls
1004 813 Pls
1018 813 Pls
1031 813 Pls
1045 813 Pls
1059 813 Pls
1072 813 Pls
1086 813 Pls
1099 813 Pls
1113 813 Pls
1127 813 Pls
1140 813 Pls
1154 813 Pls
1168 813 Pls
1181 813 Pls
1195 813 Pls
1208 813 Pls
1222 813 Pls
1236 813 Pls
1249 813 Pls
1263 813 Pls
1277 813 Pls
1290 813 Pls
1304 813 Pls
1318 813 Pls
1331 813 Pls
1345 813 Pls
1358 813 Pls
1372 813 Pls
1386 813 Pls
1399 813 Pls
1413 813 Pls
1427 813 Pls
1440 813 Pls
1454 813 Pls
1468 813 Pls
1481 813 Pls
1495 813 Pls
1508 813 Pls
1522 813 Pls
1536 813 Pls
1549 813 Pls
1563 813 Pls
1577 813 Pls
1590 813 Pls
1604 813 Pls
1617 813 Pls
1631 813 Pls
1645 813 Pls
1658 813 Pls
1672 813 Pls
1686 813 Pls
1699 813 Pls
1713 813 Pls
1727 813 Pls
1740 813 Pls
1754 813 Pls
1767 813 Pls
1781 813 Pls
1795 813 Pls
1808 813 Pls
1822 813 Pls
1836 813 Pls
1849 813 Pls
1863 813 Pls
1877 813 Pls
1890 813 Pls
1904 813 Pls
1917 813 Pls
1931 813 Pls
1945 813 Pls
1958 813 Pls
1972 813 Pls
1986 813 Pls
1999 813 Pls
2013 813 Pls
2026 813 Pls
2040 813 Pls
2054 813 Pls
2067 813 Pls
2081 813 Pls
2095 813 Pls
2108 813 Pls
2122 813 Pls
2136 813 Pls
2149 813 Pls
2163 813 Pls
2176 813 Pls
2190 813 Pls
2204 813 Pls
2217 813 Pls
2231 813 Pls
2245 813 Pls
2258 813 Pls
2272 813 Pls
2286 813 Pls
2299 813 Pls
2313 813 Pls
2326 813 Pls
2340 813 Pls
2354 813 Pls
2367 813 Pls
2381 813 Pls
2395 813 Pls
2408 813 Pls
2422 813 Pls
2435 813 Pls
2449 813 Pls
2463 813 Pls
2476 813 Pls
2490 813 Pls
2504 813 Pls
2517 813 Pls
2531 813 Pls
2545 813 Pls
2558 813 Pls
2572 813 Pls
2585 813 Pls
2599 813 Pls
2613 813 Pls
2626 813 Pls
2640 813 Pls
2654 813 Pls
2667 813 Pls
2681 813 Pls
2695 813 Pls
2708 813 Pls
2722 813 Pls
2735 813 Pls
2749 813 Pls
2763 813 Pls
2776 813 Pls
2790 813 Pls
2804 813 Pls
2817 813 Pls
2831 813 Pls
2844 813 Pls
2858 813 Pls
2872 813 Pls
2885 813 Pls
2899 813 Pls
2913 813 Pls
2926 813 Pls
2940 813 Pls
2954 813 Pls
2967 813 Pls
2981 813 Pls
2994 813 Pls
3008 813 Pls
3022 813 Pls
3035 813 Pls
3049 813 Pls
3063 813 Pls
3076 813 Pls
3090 813 Pls
3104 813 Pls
3117 813 Pls
3131 813 Pls
3144 813 Pls
3158 813 Pls
3172 813 Pls
3185 813 Pls
3199 813 Pls
3213 813 Pls
3226 813 Pls
3240 813 Pls
3253 813 Pls
3267 813 Pls
3281 813 Pls
3294 813 Pls
3308 813 Pls
3322 813 Pls
3335 813 Pls
3349 813 Pls
3363 813 Pls
3376 813 Pls
3390 813 Pls
3403 813 Pls
3417 813 Pls
3431 813 Pls
3444 813 Pls
3458 813 Pls
3472 813 Pls
3485 813 Pls
3499 813 Pls
3513 813 Pls
3526 813 Pls
3540 813 Pls
3553 813 Pls
3567 813 Pls
3581 813 Pls
3594 813 Pls
3608 813 Pls
3622 813 Pls
3635 813 Pls
3649 813 Pls
3662 813 Pls
3676 813 Pls
3690 813 Pls
3703 813 Pls
3717 813 Pls
3731 813 Pls
3744 813 Pls
3758 813 Pls
3772 813 Pls
3785 813 Pls
3799 813 Pls
3812 813 Pls
3826 813 Pls
3840 813 Pls
3853 813 Pls
3867 813 Pls
3881 813 Pls
3894 813 Pls
3908 813 Pls
3922 813 Pls
3935 813 Pls
3949 813 Pls
3962 813 Pls
3976 813 Pls
3990 813 Pls
4003 813 Pls
4017 813 Pls
4031 813 Pls
4044 813 Pls
4058 813 Pls
4071 813 Pls
4085 813 Pls
4099 813 Pls
4126 813 Pls
4140 813 Pls
4153 813 Pls
4167 813 Pls
4181 813 Pls
4194 813 Pls
4208 813 Pls
4221 813 Pls
4235 813 Pls
4249 813 Pls
4262 813 Pls
4276 813 Pls
4290 813 Pls
4303 813 Pls
4317 813 Pls
4331 813 Pls
4344 813 Pls
4358 813 Pls
4371 813 Pls
4385 813 Pls
4399 813 Pls
4412 813 Pls
4426 813 Pls
4440 813 Pls
4453 813 Pls
4467 813 Pls
4480 813 Pls
4494 813 Pls
4508 813 Pls
4521 813 Pls
4535 813 Pls
4549 813 Pls
4562 813 Pls
4576 813 Pls
4590 813 Pls
4603 813 Pls
4617 813 Pls
4630 813 Pls
4644 813 Pls
4658 813 Pls
4671 813 Pls
4685 813 Pls
4699 813 Pls
4712 813 Pls
4726 813 Pls
4740 813 Pls
4753 813 Pls
4767 813 Pls
4780 813 Pls
4794 813 Pls
4808 813 Pls
4821 813 Pls
4835 813 Pls
4849 813 Pls
4862 813 Pls
4876 813 Pls
4889 813 Pls
4903 813 Pls
4917 813 Pls
4930 813 Pls
4944 813 Pls
4958 813 Pls
4971 813 Pls
4985 813 Pls
4999 813 Pls
5012 813 Pls
5026 813 Pls
5039 813 Pls
5053 813 Pls
5067 813 Pls
5080 813 Pls
5094 813 Pls
5108 813 Pls
5121 813 Pls
5135 813 Pls
5149 813 Pls
5162 813 Pls
5176 813 Pls
5189 813 Pls
5203 813 Pls
5217 813 Pls
5230 813 Pls
5244 813 Pls
5258 813 Pls
5271 813 Pls
5285 813 Pls
5298 813 Pls
5312 813 Pls
5326 813 Pls
5339 813 Pls
5353 813 Pls
5367 813 Pls
5380 813 Pls
5394 813 Pls
5408 813 Pls
5421 813 Pls
5435 813 Pls
5448 813 Pls
5462 813 Pls
5476 813 Pls
5489 813 Pls
5503 813 Pls
5517 813 Pls
5530 813 Pls
5544 813 Pls
5558 813 Pls
5571 813 Pls
5585 813 Pls
5598 813 Pls
5612 813 Pls
5626 813 Pls
5639 813 Pls
5653 813 Pls
5667 813 Pls
5680 813 Pls
5694 813 Pls
5707 813 Pls
5721 813 Pls
5735 813 Pls
5748 813 Pls
5762 813 Pls
5776 813 Pls
5789 813 Pls
5803 813 Pls
5817 813 Pls
5830 813 Pls
5844 813 Pls
5857 813 Pls
5885 813 Pls
5898 813 Pls
5912 813 Pls
5926 813 Pls
5939 813 Pls
5953 813 Pls
5967 813 Pls
5980 813 Pls
5994 813 Pls
6007 813 Pls
6021 813 Pls
6035 813 Pls
6048 813 Pls
6062 813 Pls
6076 813 Pls
6089 813 Pls
6103 813 Pls
6116 813 Pls
6130 813 Pls
6144 813 Pls
6157 813 Pls
6171 813 Pls
6185 813 Pls
6198 813 Pls
6212 813 Pls
6226 813 Pls
6239 813 Pls
6253 813 Pls
6266 813 Pls
6280 813 Pls
6294 813 Pls
6307 813 Pls
6321 813 Pls
6335 813 Pls
6348 813 Pls
6362 813 Pls
6376 813 Pls
6389 813 Pls
6403 813 Pls
6416 813 Pls
6430 813 Pls
6444 813 Pls
6457 813 Pls
6471 813 Pls
2145 4486 Pls
% End plot #1
1.000 UL
LTb
854 4619 N
854 448 L
6135 0 V
0 4171 V
-6135 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
