%!PS-Adobe-2.0
%%Title: images/graphes-cpu-mean.ps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Wed Mar  9 09:25:51 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-cpu-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (bbrowning)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Mar  9 09:25:51 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
602 448 M
6387 0 V
stroke
LTb
602 448 M
63 0 V
6324 0 R
-63 0 V
518 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
602 1044 M
6387 0 V
stroke
LTb
602 1044 M
63 0 V
6324 0 R
-63 0 V
-6408 0 R
( 1) Rshow
1.000 UL
LTb
1.000 UL
LTa
602 1640 M
6387 0 V
stroke
LTb
602 1640 M
63 0 V
6324 0 R
-63 0 V
-6408 0 R
( 2) Rshow
1.000 UL
LTb
1.000 UL
LTa
602 2236 M
6387 0 V
stroke
LTb
602 2236 M
63 0 V
6324 0 R
-63 0 V
-6408 0 R
( 3) Rshow
1.000 UL
LTb
1.000 UL
LTa
602 2831 M
6387 0 V
stroke
LTb
602 2831 M
63 0 V
6324 0 R
-63 0 V
-6408 0 R
( 4) Rshow
1.000 UL
LTb
1.000 UL
LTa
602 3427 M
6387 0 V
stroke
LTb
602 3427 M
63 0 V
6324 0 R
-63 0 V
-6408 0 R
( 5) Rshow
1.000 UL
LTb
1.000 UL
LTa
602 4023 M
6387 0 V
stroke
LTb
602 4023 M
63 0 V
6324 0 R
-63 0 V
-6408 0 R
( 6) Rshow
1.000 UL
LTb
1.000 UL
LTa
602 4619 M
6387 0 V
stroke
LTb
602 4619 M
63 0 V
6324 0 R
-63 0 V
-6408 0 R
( 7) Rshow
1.000 UL
LTb
1.000 UL
LTa
602 448 M
0 4171 V
stroke
LTb
602 448 M
0 63 V
0 4108 R
0 -63 V
602 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1400 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
1400 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
2199 448 M
0 4171 V
stroke
LTb
2199 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
2997 448 M
0 4171 V
stroke
LTb
2997 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3796 448 M
0 4171 V
stroke
LTb
3796 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4594 448 M
0 4171 V
stroke
LTb
4594 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5392 448 M
0 4171 V
stroke
LTb
5392 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 3000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6191 448 M
0 4171 V
stroke
LTb
6191 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 3500) Cshow
1.000 UL
LTb
1.000 UL
LTa
6989 448 M
0 4171 V
stroke
LTb
6989 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 4000) Cshow
1.000 UL
LTb
1.000 UL
LTb
602 4619 N
602 448 L
6387 0 V
0 4171 V
-6387 0 V
Z stroke
LCb setrgbcolor
196 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(cpu) Cshow
grestore
LTb
LCb setrgbcolor
3795 98 M
(unit = sec ) Cshow
LTb
3795 4829 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
1526 4486 M
(cpu@server) Rshow
LT0
1610 4486 M
399 0 V
618 604 M
634 481 L
16 874 V
16 577 V
16 1 V
16 -531 V
16 210 V
16 -69 V
16 243 V
16 442 V
16 -375 V
16 147 V
16 -167 V
16 170 V
16 874 V
15 394 V
16 152 V
16 -220 V
16 -518 V
16 646 V
16 -259 V
16 437 V
16 -464 V
16 274 V
16 -56 V
16 441 V
16 -631 V
16 498 V
16 197 V
16 32 V
16 29 V
16 157 V
16 -195 V
16 220 V
16 -256 V
16 119 V
16 -192 V
16 297 V
16 -247 V
16 54 V
16 16 V
16 17 V
16 -35 V
16 141 V
16 -136 V
16 89 V
15 -194 V
16 171 V
16 -82 V
16 187 V
16 -291 V
16 204 V
16 -79 V
16 116 V
16 -242 V
16 218 V
16 -315 V
16 309 V
16 -116 V
16 164 V
16 -276 V
16 50 V
16 172 V
16 -295 V
16 247 V
16 0 V
16 -76 V
16 -62 V
16 255 V
16 -111 V
16 -75 V
16 -9 V
16 -28 V
16 -181 V
16 534 V
16 -436 V
15 393 V
16 -396 V
16 241 V
16 -210 V
16 340 V
16 -387 V
16 387 V
16 -432 V
16 347 V
16 -403 V
16 685 V
16 -558 V
16 112 V
16 -112 V
16 221 V
16 -245 V
16 296 V
16 -137 V
16 195 V
16 -398 V
16 557 V
16 -604 V
16 462 V
16 -479 V
16 264 V
16 -228 V
16 229 V
16 26 V
16 -93 V
16 42 V
stroke 2295 3752 M
16 36 V
15 -125 V
16 109 V
16 -229 V
16 380 V
16 -354 V
16 101 V
16 44 V
16 131 V
16 -100 V
16 109 V
16 -118 V
16 93 V
16 -76 V
16 36 V
16 -105 V
16 46 V
16 -30 V
16 79 V
16 -102 V
16 26 V
16 -27 V
16 170 V
16 -73 V
16 -60 V
16 65 V
16 -42 V
16 -59 V
16 136 V
16 -198 V
16 249 V
16 -151 V
15 -54 V
16 -29 V
16 14 V
16 112 V
16 97 V
16 -25 V
16 -186 V
16 -103 V
16 61 V
16 263 V
16 -334 V
16 21 V
16 -308 V
16 346 V
16 -200 V
16 182 V
16 -333 V
16 298 V
16 -62 V
16 261 V
16 -261 V
16 274 V
16 -170 V
16 393 V
16 -381 V
16 -25 V
16 6 V
16 268 V
16 -396 V
16 313 V
16 -122 V
15 20 V
16 36 V
16 91 V
16 -184 V
16 279 V
16 -170 V
16 192 V
16 -403 V
16 359 V
16 -373 V
16 579 V
16 -667 V
16 643 V
16 -588 V
16 448 V
16 -352 V
16 181 V
16 33 V
16 -89 V
16 -40 V
16 32 V
16 73 V
16 60 V
16 -207 V
16 126 V
16 5 V
16 -54 V
16 10 V
16 151 V
16 -271 V
16 376 V
15 -373 V
16 170 V
16 -24 V
16 24 V
16 -139 V
16 275 V
16 -299 V
16 34 V
16 88 V
16 20 V
stroke 3955 3705 M
16 -66 V
16 -65 V
16 163 V
16 -132 V
16 140 V
16 -80 V
16 -45 V
16 -21 V
16 -41 V
16 177 V
16 -94 V
16 -74 V
16 221 V
16 -250 V
16 270 V
16 -288 V
16 302 V
16 -294 V
16 276 V
16 -329 V
15 220 V
16 -206 V
16 344 V
16 -312 V
16 356 V
16 -313 V
16 235 V
16 -322 V
16 349 V
16 -186 V
16 181 V
16 -292 V
16 30 V
16 -48 V
16 42 V
16 -393 V
16 505 V
16 -602 V
16 763 V
16 -393 V
16 374 V
16 -711 V
16 128 V
16 -69 V
16 147 V
16 45 V
32 141 V
16 -16 V
16 296 V
16 -219 V
15 115 V
16 -335 V
16 432 V
16 -275 V
16 40 V
16 47 V
16 -170 V
16 -20 V
16 210 V
16 109 V
16 -131 V
16 153 V
16 -182 V
16 -375 V
16 441 V
16 -133 V
16 132 V
16 -66 V
16 102 V
16 64 V
16 -129 V
16 78 V
16 -37 V
16 -208 V
16 208 V
16 -104 V
16 -6 V
16 170 V
16 -36 V
16 24 V
16 -165 V
15 181 V
16 -121 V
16 58 V
16 25 V
16 -16 V
16 -59 V
16 125 V
16 2 V
16 -83 V
16 20 V
16 -95 V
16 94 V
16 79 V
16 -268 V
16 -54 V
16 469 V
16 -147 V
16 -186 V
16 43 V
16 -130 V
16 253 V
16 -164 V
16 64 V
stroke 5632 3592 M
16 -40 V
16 -51 V
16 236 V
16 -47 V
16 -124 V
16 69 V
16 -35 V
16 -14 V
15 -119 V
16 133 V
16 68 V
16 -128 V
16 138 V
16 -94 V
16 -216 V
16 -51 V
16 -48 V
16 159 V
16 319 V
16 -502 V
16 240 V
16 -437 V
16 101 V
16 372 V
16 242 V
16 -391 V
16 358 V
16 -243 V
16 70 V
16 50 V
16 -55 V
16 -76 V
16 292 V
16 -247 V
16 -695 V
16 118 V
16 340 V
16 -334 V
15 545 V
16 11 V
16 110 V
16 -8 V
16 -143 V
16 -92 V
16 171 V
16 172 V
16 -47 V
16 -187 V
16 8 V
16 226 V
16 -280 V
16 86 V
16 59 V
16 -144 V
16 13 V
16 -77 V
16 60 V
16 127 V
16 6 V
16 -241 V
16 -32 V
16 128 V
16 77 V
16 36 V
16 -50 V
16 45 V
16 -26 V
16 -26 V
16 -82 V
15 121 V
16 -33 V
16 -22 V
16 95 V
16 -252 V
16 356 V
13 -249 V
618 604 Pls
634 481 Pls
650 1355 Pls
666 1932 Pls
682 1933 Pls
698 1402 Pls
714 1612 Pls
730 1543 Pls
746 1786 Pls
762 2228 Pls
778 1853 Pls
794 2000 Pls
810 1833 Pls
826 2003 Pls
842 2877 Pls
857 3271 Pls
873 3423 Pls
889 3203 Pls
905 2685 Pls
921 3331 Pls
937 3072 Pls
953 3509 Pls
969 3045 Pls
985 3319 Pls
1001 3263 Pls
1017 3704 Pls
1033 3073 Pls
1049 3571 Pls
1065 3768 Pls
1081 3800 Pls
1097 3829 Pls
1113 3986 Pls
1129 3791 Pls
1145 4011 Pls
1161 3755 Pls
1177 3874 Pls
1193 3682 Pls
1209 3979 Pls
1225 3732 Pls
1241 3786 Pls
1257 3802 Pls
1273 3819 Pls
1289 3784 Pls
1305 3925 Pls
1321 3789 Pls
1337 3878 Pls
1352 3684 Pls
1368 3855 Pls
1384 3773 Pls
1400 3960 Pls
1416 3669 Pls
1432 3873 Pls
1448 3794 Pls
1464 3910 Pls
1480 3668 Pls
1496 3886 Pls
1512 3571 Pls
1528 3880 Pls
1544 3764 Pls
1560 3928 Pls
1576 3652 Pls
1592 3702 Pls
1608 3874 Pls
1624 3579 Pls
1640 3826 Pls
1656 3826 Pls
1672 3750 Pls
1688 3688 Pls
1704 3943 Pls
1720 3832 Pls
1736 3757 Pls
1752 3748 Pls
1768 3720 Pls
1784 3539 Pls
1800 4073 Pls
1816 3637 Pls
1831 4030 Pls
1847 3634 Pls
1863 3875 Pls
1879 3665 Pls
1895 4005 Pls
1911 3618 Pls
1927 4005 Pls
1943 3573 Pls
1959 3920 Pls
1975 3517 Pls
1991 4202 Pls
2007 3644 Pls
2023 3756 Pls
2039 3644 Pls
2055 3865 Pls
2071 3620 Pls
2087 3916 Pls
2103 3779 Pls
2119 3974 Pls
2135 3576 Pls
2151 4133 Pls
2167 3529 Pls
2183 3991 Pls
2199 3512 Pls
2215 3776 Pls
2231 3548 Pls
2247 3777 Pls
2263 3803 Pls
2279 3710 Pls
2295 3752 Pls
2311 3788 Pls
2326 3663 Pls
2342 3772 Pls
2358 3543 Pls
2374 3923 Pls
2390 3569 Pls
2406 3670 Pls
2422 3714 Pls
2438 3845 Pls
2454 3745 Pls
2470 3854 Pls
2486 3736 Pls
2502 3829 Pls
2518 3753 Pls
2534 3789 Pls
2550 3684 Pls
2566 3730 Pls
2582 3700 Pls
2598 3779 Pls
2614 3677 Pls
2630 3703 Pls
2646 3676 Pls
2662 3846 Pls
2678 3773 Pls
2694 3713 Pls
2710 3778 Pls
2726 3736 Pls
2742 3677 Pls
2758 3813 Pls
2774 3615 Pls
2790 3864 Pls
2806 3713 Pls
2821 3659 Pls
2837 3630 Pls
2853 3644 Pls
2869 3756 Pls
2885 3853 Pls
2901 3828 Pls
2917 3642 Pls
2933 3539 Pls
2949 3600 Pls
2965 3863 Pls
2981 3529 Pls
2997 3550 Pls
3013 3242 Pls
3029 3588 Pls
3045 3388 Pls
3061 3570 Pls
3077 3237 Pls
3093 3535 Pls
3109 3473 Pls
3125 3734 Pls
3141 3473 Pls
3157 3747 Pls
3173 3577 Pls
3189 3970 Pls
3205 3589 Pls
3221 3564 Pls
3237 3570 Pls
3253 3838 Pls
3269 3442 Pls
3285 3755 Pls
3301 3633 Pls
3316 3653 Pls
3332 3689 Pls
3348 3780 Pls
3364 3596 Pls
3380 3875 Pls
3396 3705 Pls
3412 3897 Pls
3428 3494 Pls
3444 3853 Pls
3460 3480 Pls
3476 4059 Pls
3492 3392 Pls
3508 4035 Pls
3524 3447 Pls
3540 3895 Pls
3556 3543 Pls
3572 3724 Pls
3588 3757 Pls
3604 3668 Pls
3620 3628 Pls
3636 3660 Pls
3652 3733 Pls
3668 3793 Pls
3684 3586 Pls
3700 3712 Pls
3716 3717 Pls
3732 3663 Pls
3748 3673 Pls
3764 3824 Pls
3780 3553 Pls
3796 3929 Pls
3811 3556 Pls
3827 3726 Pls
3843 3702 Pls
3859 3726 Pls
3875 3587 Pls
3891 3862 Pls
3907 3563 Pls
3923 3597 Pls
3939 3685 Pls
3955 3705 Pls
3971 3639 Pls
3987 3574 Pls
4003 3737 Pls
4019 3605 Pls
4035 3745 Pls
4051 3665 Pls
4067 3620 Pls
4083 3599 Pls
4099 3558 Pls
4115 3735 Pls
4131 3641 Pls
4147 3567 Pls
4163 3788 Pls
4179 3538 Pls
4195 3808 Pls
4211 3520 Pls
4227 3822 Pls
4243 3528 Pls
4259 3804 Pls
4275 3475 Pls
4290 3695 Pls
4306 3489 Pls
4322 3833 Pls
4338 3521 Pls
4354 3877 Pls
4370 3564 Pls
4386 3799 Pls
4402 3477 Pls
4418 3826 Pls
4434 3640 Pls
4450 3821 Pls
4466 3529 Pls
4482 3559 Pls
4498 3511 Pls
4514 3553 Pls
4530 3160 Pls
4546 3665 Pls
4562 3063 Pls
4578 3826 Pls
4594 3433 Pls
4610 3807 Pls
4626 3096 Pls
4642 3224 Pls
4658 3155 Pls
4674 3302 Pls
4690 3347 Pls
4722 3488 Pls
4738 3472 Pls
4754 3768 Pls
4770 3549 Pls
4785 3664 Pls
4801 3329 Pls
4817 3761 Pls
4833 3486 Pls
4849 3526 Pls
4865 3573 Pls
4881 3403 Pls
4897 3383 Pls
4913 3593 Pls
4929 3702 Pls
4945 3571 Pls
4961 3724 Pls
4977 3542 Pls
4993 3167 Pls
5009 3608 Pls
5025 3475 Pls
5041 3607 Pls
5057 3541 Pls
5073 3643 Pls
5089 3707 Pls
5105 3578 Pls
5121 3656 Pls
5137 3619 Pls
5153 3411 Pls
5169 3619 Pls
5185 3515 Pls
5201 3509 Pls
5217 3679 Pls
5233 3643 Pls
5249 3667 Pls
5265 3502 Pls
5280 3683 Pls
5296 3562 Pls
5312 3620 Pls
5328 3645 Pls
5344 3629 Pls
5360 3570 Pls
5376 3695 Pls
5392 3697 Pls
5408 3614 Pls
5424 3634 Pls
5440 3539 Pls
5456 3633 Pls
5472 3712 Pls
5488 3444 Pls
5504 3390 Pls
5520 3859 Pls
5536 3712 Pls
5552 3526 Pls
5568 3569 Pls
5584 3439 Pls
5600 3692 Pls
5616 3528 Pls
5632 3592 Pls
5648 3552 Pls
5664 3501 Pls
5680 3737 Pls
5696 3690 Pls
5712 3566 Pls
5728 3635 Pls
5744 3600 Pls
5760 3586 Pls
5775 3467 Pls
5791 3600 Pls
5807 3668 Pls
5823 3540 Pls
5839 3678 Pls
5855 3584 Pls
5871 3368 Pls
5887 3317 Pls
5903 3269 Pls
5919 3428 Pls
5935 3747 Pls
5951 3245 Pls
5967 3485 Pls
5983 3048 Pls
5999 3149 Pls
6015 3521 Pls
6031 3763 Pls
6047 3372 Pls
6063 3730 Pls
6079 3487 Pls
6095 3557 Pls
6111 3607 Pls
6127 3552 Pls
6143 3476 Pls
6159 3768 Pls
6175 3521 Pls
6191 2826 Pls
6207 2944 Pls
6223 3284 Pls
6239 2950 Pls
6254 3495 Pls
6270 3506 Pls
6286 3616 Pls
6302 3608 Pls
6318 3465 Pls
6334 3373 Pls
6350 3544 Pls
6366 3716 Pls
6382 3669 Pls
6398 3482 Pls
6414 3490 Pls
6430 3716 Pls
6446 3436 Pls
6462 3522 Pls
6478 3581 Pls
6494 3437 Pls
6510 3450 Pls
6526 3373 Pls
6542 3433 Pls
6558 3560 Pls
6574 3566 Pls
6590 3325 Pls
6606 3293 Pls
6622 3421 Pls
6638 3498 Pls
6654 3534 Pls
6670 3484 Pls
6686 3529 Pls
6702 3503 Pls
6718 3477 Pls
6734 3395 Pls
6749 3516 Pls
6765 3483 Pls
6781 3461 Pls
6797 3556 Pls
6813 3304 Pls
6829 3660 Pls
6842 3411 Pls
1809 4486 Pls
% End plot #1
1.000 UL
LTb
602 4619 N
602 448 L
6387 0 V
0 4171 V
-6387 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
