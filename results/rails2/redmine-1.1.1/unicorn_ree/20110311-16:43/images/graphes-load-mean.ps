%!PS-Adobe-2.0
%%Title: images/graphes-load-mean.ps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Fri Mar 11 13:49:12 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-load-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (bbrowning)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Mar 11 13:49:12 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
686 448 M
6303 0 V
stroke
LTb
686 448 M
63 0 V
6240 0 R
-63 0 V
602 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 1044 M
6303 0 V
stroke
LTb
686 1044 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 2) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 1640 M
6303 0 V
stroke
LTb
686 1640 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 4) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 2236 M
6303 0 V
stroke
LTb
686 2236 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 6) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 2831 M
6303 0 V
stroke
LTb
686 2831 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 8) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 3427 M
6303 0 V
stroke
LTb
686 3427 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 10) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 4023 M
6303 0 V
stroke
LTb
686 4023 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 12) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 4619 M
6303 0 V
stroke
LTb
686 4619 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 14) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 448 M
0 4171 V
stroke
LTb
686 448 M
0 63 V
0 4108 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1474 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
1474 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
2262 448 M
0 4171 V
stroke
LTb
2262 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
3050 448 M
0 4171 V
stroke
LTb
3050 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3838 448 M
0 4171 V
stroke
LTb
3838 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4625 448 M
0 4171 V
stroke
LTb
4625 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5413 448 M
0 4171 V
stroke
LTb
5413 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 3000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6201 448 M
0 4171 V
stroke
LTb
6201 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 3500) Cshow
1.000 UL
LTb
1.000 UL
LTa
6989 448 M
0 4171 V
stroke
LTb
6989 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 4000) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4619 N
686 448 L
6303 0 V
0 4171 V
-6303 0 V
Z stroke
LCb setrgbcolor
196 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(load) Cshow
grestore
LTb
LCb setrgbcolor
3837 98 M
(unit = sec ) Cshow
LTb
3837 4829 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
1694 4486 M
(load@server) Rshow
LT0
1778 4486 M
399 0 V
702 517 M
16 11 V
15 -11 V
16 36 V
16 -19 V
16 33 V
15 -21 V
16 57 V
16 -3 V
16 66 V
15 -12 V
16 12 V
16 -12 V
16 14 V
15 -12 V
16 57 V
16 29 V
16 -23 V
15 50 V
16 21 V
16 15 V
16 -8 V
15 -9 V
16 -4 V
16 15 V
16 -32 V
15 92 V
16 -39 V
16 165 V
16 8 V
15 81 V
16 62 V
16 105 V
16 -78 V
16 47 V
15 -2 V
16 -48 V
16 -18 V
16 24 V
15 -15 V
16 -42 V
16 -77 V
16 164 V
15 68 V
16 9 V
16 6 V
16 -15 V
15 -60 V
16 -95 V
16 191 V
16 194 V
15 89 V
16 292 V
16 -90 V
16 -134 V
15 48 V
16 -6 V
16 164 V
16 -38 V
15 83 V
16 -131 V
16 -42 V
16 354 V
15 -94 V
16 -30 V
16 345 V
16 21 V
16 143 V
15 238 V
16 -163 V
16 48 V
16 -117 V
15 283 V
16 -9 V
16 -149 V
16 57 V
15 -227 V
16 135 V
16 -120 V
16 107 V
15 63 V
16 51 V
16 -137 V
16 -138 V
15 -133 V
16 91 V
16 218 V
16 134 V
15 -182 V
16 -225 V
16 -102 V
16 -128 V
15 283 V
16 54 V
16 26 V
16 -78 V
15 37 V
16 172 V
16 -65 V
16 -39 V
16 36 V
15 -66 V
16 -56 V
stroke 2309 2367 M
16 41 V
16 -41 V
15 128 V
16 15 V
16 101 V
16 203 V
15 8 V
16 -6 V
16 -128 V
16 -185 V
15 -88 V
16 336 V
16 -217 V
16 -209 V
15 -78 V
16 158 V
16 60 V
16 21 V
15 176 V
16 307 V
16 -164 V
16 265 V
15 157 V
16 -193 V
16 -38 V
16 366 V
15 283 V
16 98 V
16 -140 V
16 84 V
16 -90 V
15 -166 V
16 56 V
16 128 V
16 -24 V
15 -59 V
16 -227 V
16 185 V
16 110 V
15 125 V
16 -152 V
16 -271 V
16 253 V
15 -89 V
16 24 V
16 -152 V
16 -50 V
15 -185 V
16 185 V
16 -57 V
16 -203 V
15 164 V
16 -86 V
16 -162 V
16 120 V
15 75 V
16 -206 V
16 -96 V
16 46 V
15 88 V
16 -134 V
16 149 V
16 111 V
16 -65 V
15 145 V
16 -119 V
16 29 V
16 4 V
15 143 V
16 -48 V
16 -95 V
16 48 V
15 235 V
16 164 V
16 124 V
16 126 V
15 -280 V
16 99 V
16 -10 V
16 176 V
15 181 V
16 37 V
16 211 V
16 -110 V
15 65 V
16 59 V
16 -184 V
16 30 V
15 -90 V
16 48 V
16 -50 V
16 95 V
15 21 V
16 50 V
16 75 V
16 -272 V
16 33 V
15 -109 V
16 -99 V
16 271 V
31 -110 V
16 -232 V
16 190 V
16 209 V
stroke 3964 4092 M
15 -27 V
16 15 V
16 -9 V
16 -6 V
15 -126 V
16 -11 V
16 137 V
16 155 V
15 -134 V
16 -74 V
16 -46 V
16 66 V
15 3 V
16 63 V
16 65 V
16 -18 V
15 212 V
16 18 V
16 -69 V
16 95 V
15 -62 V
16 41 V
16 -29 V
16 -114 V
15 40 V
16 -135 V
16 -92 V
16 -119 V
16 245 V
15 14 V
16 -119 V
16 -179 V
16 -75 V
15 57 V
16 4 V
16 229 V
16 -80 V
15 -75 V
16 -149 V
16 60 V
16 229 V
15 -65 V
16 -195 V
16 161 V
16 -232 V
15 136 V
16 -34 V
16 -155 V
16 92 V
15 15 V
16 191 V
16 21 V
16 178 V
15 -220 V
16 -138 V
16 123 V
16 -42 V
15 -143 V
16 -199 V
16 -105 V
16 42 V
16 -51 V
15 173 V
16 218 V
16 44 V
16 -220 V
15 -149 V
16 53 V
16 -24 V
16 -92 V
15 78 V
16 -45 V
16 152 V
16 -9 V
15 -18 V
16 128 V
16 131 V
16 -182 V
15 141 V
16 134 V
16 -138 V
16 50 V
15 90 V
16 75 V
16 41 V
16 153 V
15 -311 V
16 153 V
16 -6 V
16 -224 V
15 -78 V
16 -151 V
16 -99 V
16 107 V
16 -115 V
15 101 V
16 -21 V
16 170 V
16 -135 V
15 170 V
16 -6 V
16 174 V
16 53 V
15 18 V
stroke 5602 4056 M
16 -56 V
16 -4 V
16 -220 V
15 41 V
16 25 V
16 -256 V
16 -144 V
15 83 V
16 36 V
16 -65 V
16 247 V
15 60 V
16 151 V
16 -122 V
16 -97 V
15 -73 V
16 -35 V
16 196 V
16 105 V
15 -57 V
16 -214 V
16 149 V
16 -60 V
16 -105 V
15 -59 V
16 107 V
16 78 V
16 107 V
15 254 V
16 -111 V
16 155 V
16 -92 V
15 -325 V
16 -47 V
16 187 V
16 84 V
15 -82 V
16 13 V
16 -393 V
16 -72 V
15 -92 V
16 -21 V
16 110 V
16 33 V
15 54 V
16 160 V
16 -288 V
16 -153 V
15 -77 V
16 -86 V
16 -313 V
16 191 V
15 306 V
16 -12 V
16 227 V
16 -101 V
16 -30 V
15 -21 V
702 517 Pls
718 528 Pls
733 517 Pls
749 553 Pls
765 534 Pls
781 567 Pls
796 546 Pls
812 603 Pls
828 600 Pls
844 666 Pls
859 654 Pls
875 666 Pls
891 654 Pls
907 668 Pls
922 656 Pls
938 713 Pls
954 742 Pls
970 719 Pls
985 769 Pls
1001 790 Pls
1017 805 Pls
1033 797 Pls
1048 788 Pls
1064 784 Pls
1080 799 Pls
1096 767 Pls
1111 859 Pls
1127 820 Pls
1143 985 Pls
1159 993 Pls
1174 1074 Pls
1190 1136 Pls
1206 1241 Pls
1222 1163 Pls
1238 1210 Pls
1253 1208 Pls
1269 1160 Pls
1285 1142 Pls
1301 1166 Pls
1316 1151 Pls
1332 1109 Pls
1348 1032 Pls
1364 1196 Pls
1379 1264 Pls
1395 1273 Pls
1411 1279 Pls
1427 1264 Pls
1442 1204 Pls
1458 1109 Pls
1474 1300 Pls
1490 1494 Pls
1505 1583 Pls
1521 1875 Pls
1537 1785 Pls
1553 1651 Pls
1568 1699 Pls
1584 1693 Pls
1600 1857 Pls
1616 1819 Pls
1631 1902 Pls
1647 1771 Pls
1663 1729 Pls
1679 2083 Pls
1694 1989 Pls
1710 1959 Pls
1726 2304 Pls
1742 2325 Pls
1758 2468 Pls
1773 2706 Pls
1789 2543 Pls
1805 2591 Pls
1821 2474 Pls
1836 2757 Pls
1852 2748 Pls
1868 2599 Pls
1884 2656 Pls
1899 2429 Pls
1915 2564 Pls
1931 2444 Pls
1947 2551 Pls
1962 2614 Pls
1978 2665 Pls
1994 2528 Pls
2010 2390 Pls
2025 2257 Pls
2041 2348 Pls
2057 2566 Pls
2073 2700 Pls
2088 2518 Pls
2104 2293 Pls
2120 2191 Pls
2136 2063 Pls
2151 2346 Pls
2167 2400 Pls
2183 2426 Pls
2199 2348 Pls
2214 2385 Pls
2230 2557 Pls
2246 2492 Pls
2262 2453 Pls
2278 2489 Pls
2293 2423 Pls
2309 2367 Pls
2325 2408 Pls
2341 2367 Pls
2356 2495 Pls
2372 2510 Pls
2388 2611 Pls
2404 2814 Pls
2419 2822 Pls
2435 2816 Pls
2451 2688 Pls
2467 2503 Pls
2482 2415 Pls
2498 2751 Pls
2514 2534 Pls
2530 2325 Pls
2545 2247 Pls
2561 2405 Pls
2577 2465 Pls
2593 2486 Pls
2608 2662 Pls
2624 2969 Pls
2640 2805 Pls
2656 3070 Pls
2671 3227 Pls
2687 3034 Pls
2703 2996 Pls
2719 3362 Pls
2734 3645 Pls
2750 3743 Pls
2766 3603 Pls
2782 3687 Pls
2798 3597 Pls
2813 3431 Pls
2829 3487 Pls
2845 3615 Pls
2861 3591 Pls
2876 3532 Pls
2892 3305 Pls
2908 3490 Pls
2924 3600 Pls
2939 3725 Pls
2955 3573 Pls
2971 3302 Pls
2987 3555 Pls
3002 3466 Pls
3018 3490 Pls
3034 3338 Pls
3050 3288 Pls
3065 3103 Pls
3081 3288 Pls
3097 3231 Pls
3113 3028 Pls
3128 3192 Pls
3144 3106 Pls
3160 2944 Pls
3176 3064 Pls
3191 3139 Pls
3207 2933 Pls
3223 2837 Pls
3239 2883 Pls
3254 2971 Pls
3270 2837 Pls
3286 2986 Pls
3302 3097 Pls
3318 3032 Pls
3333 3177 Pls
3349 3058 Pls
3365 3087 Pls
3381 3091 Pls
3396 3234 Pls
3412 3186 Pls
3428 3091 Pls
3444 3139 Pls
3459 3374 Pls
3475 3538 Pls
3491 3662 Pls
3507 3788 Pls
3522 3508 Pls
3538 3607 Pls
3554 3597 Pls
3570 3773 Pls
3585 3954 Pls
3601 3991 Pls
3617 4202 Pls
3633 4092 Pls
3648 4157 Pls
3664 4216 Pls
3680 4032 Pls
3696 4062 Pls
3711 3972 Pls
3727 4020 Pls
3743 3970 Pls
3759 4065 Pls
3774 4086 Pls
3790 4136 Pls
3806 4211 Pls
3822 3939 Pls
3838 3972 Pls
3853 3863 Pls
3869 3764 Pls
3885 4035 Pls
3916 3925 Pls
3932 3693 Pls
3948 3883 Pls
3964 4092 Pls
3979 4065 Pls
3995 4080 Pls
4011 4071 Pls
4027 4065 Pls
4042 3939 Pls
4058 3928 Pls
4074 4065 Pls
4090 4220 Pls
4105 4086 Pls
4121 4012 Pls
4137 3966 Pls
4153 4032 Pls
4168 4035 Pls
4184 4098 Pls
4200 4163 Pls
4216 4145 Pls
4231 4357 Pls
4247 4375 Pls
4263 4306 Pls
4279 4401 Pls
4294 4339 Pls
4310 4380 Pls
4326 4351 Pls
4342 4237 Pls
4357 4277 Pls
4373 4142 Pls
4389 4050 Pls
4405 3931 Pls
4421 4176 Pls
4436 4190 Pls
4452 4071 Pls
4468 3892 Pls
4484 3817 Pls
4499 3874 Pls
4515 3878 Pls
4531 4107 Pls
4547 4027 Pls
4562 3952 Pls
4578 3803 Pls
4594 3863 Pls
4610 4092 Pls
4625 4027 Pls
4641 3832 Pls
4657 3993 Pls
4673 3761 Pls
4688 3897 Pls
4704 3863 Pls
4720 3708 Pls
4736 3800 Pls
4751 3815 Pls
4767 4006 Pls
4783 4027 Pls
4799 4205 Pls
4814 3985 Pls
4830 3847 Pls
4846 3970 Pls
4862 3928 Pls
4877 3785 Pls
4893 3586 Pls
4909 3481 Pls
4925 3523 Pls
4941 3472 Pls
4956 3645 Pls
4972 3863 Pls
4988 3907 Pls
5004 3687 Pls
5019 3538 Pls
5035 3591 Pls
5051 3567 Pls
5067 3475 Pls
5082 3553 Pls
5098 3508 Pls
5114 3660 Pls
5130 3651 Pls
5145 3633 Pls
5161 3761 Pls
5177 3892 Pls
5193 3710 Pls
5208 3851 Pls
5224 3985 Pls
5240 3847 Pls
5256 3897 Pls
5271 3987 Pls
5287 4062 Pls
5303 4103 Pls
5319 4256 Pls
5334 3945 Pls
5350 4098 Pls
5366 4092 Pls
5382 3868 Pls
5397 3790 Pls
5413 3639 Pls
5429 3540 Pls
5445 3647 Pls
5461 3532 Pls
5476 3633 Pls
5492 3612 Pls
5508 3782 Pls
5524 3647 Pls
5539 3817 Pls
5555 3811 Pls
5571 3985 Pls
5587 4038 Pls
5602 4056 Pls
5618 4000 Pls
5634 3996 Pls
5650 3776 Pls
5665 3817 Pls
5681 3842 Pls
5697 3586 Pls
5713 3442 Pls
5728 3525 Pls
5744 3561 Pls
5760 3496 Pls
5776 3743 Pls
5791 3803 Pls
5807 3954 Pls
5823 3832 Pls
5839 3735 Pls
5854 3662 Pls
5870 3627 Pls
5886 3823 Pls
5902 3928 Pls
5917 3871 Pls
5933 3657 Pls
5949 3806 Pls
5965 3746 Pls
5981 3641 Pls
5996 3582 Pls
6012 3689 Pls
6028 3767 Pls
6044 3874 Pls
6059 4128 Pls
6075 4017 Pls
6091 4172 Pls
6107 4080 Pls
6122 3755 Pls
6138 3708 Pls
6154 3895 Pls
6170 3979 Pls
6185 3897 Pls
6201 3910 Pls
6217 3517 Pls
6233 3445 Pls
6248 3353 Pls
6264 3332 Pls
6280 3442 Pls
6296 3475 Pls
6311 3529 Pls
6327 3689 Pls
6343 3401 Pls
6359 3248 Pls
6374 3171 Pls
6390 3085 Pls
6406 2772 Pls
6422 2963 Pls
6437 3269 Pls
6453 3257 Pls
6469 3484 Pls
6485 3383 Pls
6501 3353 Pls
6516 3332 Pls
1977 4486 Pls
% End plot #1
1.000 UL
LTb
686 4619 N
686 448 L
6303 0 V
0 4171 V
-6303 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
