%!PS-Adobe-2.0
%%Title: images/graphes-freemem-mean.ps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Wed Mar  2 12:35:18 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-freemem-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (bbrowning)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Mar  2 12:35:18 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
854 448 M
6135 0 V
stroke
LTb
854 448 M
63 0 V
6072 0 R
-63 0 V
770 448 M
( 5700) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 1143 M
6135 0 V
stroke
LTb
854 1143 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 5800) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 1838 M
6135 0 V
stroke
LTb
854 1838 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 5900) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 2534 M
6135 0 V
stroke
LTb
854 2534 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 6000) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 3229 M
6135 0 V
stroke
LTb
854 3229 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 6100) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 3924 M
6135 0 V
stroke
LTb
854 3924 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 6200) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 4619 M
6135 0 V
stroke
LTb
854 4619 M
63 0 V
6072 0 R
-63 0 V
-6156 0 R
( 6300) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 448 M
0 4171 V
stroke
LTb
854 448 M
0 63 V
0 4108 R
0 -63 V
854 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
2081 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
2081 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3308 448 M
0 4171 V
stroke
LTb
3308 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4535 448 M
0 4171 V
stroke
LTb
4535 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5762 448 M
0 4171 V
stroke
LTb
5762 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6989 448 M
0 4171 V
stroke
LTb
6989 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTb
854 4619 N
854 448 L
6135 0 V
0 4171 V
-6135 0 V
Z stroke
LCb setrgbcolor
196 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(freemem) Cshow
grestore
LTb
LCb setrgbcolor
3921 98 M
(unit = sec ) Cshow
LTb
3921 4829 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
2114 4486 M
(freemem@server) Rshow
LT0
2198 4486 M
399 0 V
854 3446 M
25 -5 V
24 5 V
25 -23 V
24 -148 V
25 -33 V
24 -26 V
25 -7 V
24 -3 V
25 -4 V
24 -3 V
25 0 V
24 8 V
25 2 V
25 -4 V
24 -7 V
25 4 V
24 -7 V
25 5 V
24 -9 V
25 1 V
24 -5 V
25 -17 V
24 5 V
25 -14 V
25 6 V
24 -9 V
25 2 V
24 -4 V
25 -1 V
24 -2 V
25 -4 V
24 1 V
25 0 V
24 -3 V
25 -2 V
24 1 V
25 -2 V
25 1 V
24 -4 V
25 -6 V
24 -3 V
25 -2 V
24 -1 V
25 0 V
24 -3 V
25 -1 V
24 -2 V
25 1 V
24 -1 V
25 -1 V
25 -1 V
24 -1 V
25 -1 V
24 0 V
25 -2 V
24 1 V
25 -1 V
24 -1 V
25 -1 V
24 0 V
25 -1 V
24 -2 V
25 1 V
25 -24 V
24 0 V
25 -74 V
24 -6 V
25 -40 V
24 -2 V
25 -8 V
24 -1 V
25 -6 V
24 -1 V
25 0 V
25 -3 V
24 -1 V
25 -4 V
24 -1 V
25 -2 V
24 -2 V
25 -2 V
24 -3 V
25 -1 V
24 -1 V
25 -2 V
24 -3 V
25 1 V
25 0 V
24 -4 V
25 -1 V
24 -1 V
25 0 V
24 -1 V
25 -1 V
24 -2 V
25 1 V
24 -3 V
25 0 V
24 1 V
25 0 V
25 -2 V
24 -1 V
stroke 3357 2913 M
25 -5 V
24 0 V
25 -2 V
24 -2 V
25 1 V
24 154 V
25 2 V
24 -2 V
25 155 V
24 2 V
25 0 V
25 1 V
24 -1 V
25 129 V
24 0 V
25 24 V
24 120 V
25 5 V
24 101 V
25 12 V
24 91 V
25 8 V
25 96 V
24 55 V
25 23 V
24 -6 V
25 75 V
24 68 V
25 8 V
24 44 V
25 9 V
24 -1 V
25 1 V
24 -23 V
25 7 V
25 -7 V
24 -20 V
25 -11 V
24 -2 V
25 22 V
24 23 V
25 22 V
24 28 V
25 -6 V
24 49 V
25 5 V
24 -126 V
25 0 V
25 -36 V
24 0 V
25 37 V
24 -25 V
25 53 V
24 11 V
25 47 V
24 45 V
25 46 V
24 -9 V
25 -6 V
24 6 V
25 -36 V
25 -2 V
24 -73 V
25 -62 V
24 -52 V
25 -151 V
24 -7 V
25 -58 V
24 -60 V
25 -60 V
24 -97 V
25 -171 V
25 -107 V
24 -315 V
25 -131 V
24 -180 V
49 -31 V
25 0 V
24 -53 V
25 -4 V
24 -2 V
25 -4 V
24 0 V
25 -2 V
25 -2 V
24 0 V
25 -1 V
24 -132 V
25 -2 V
24 -3 V
25 13 V
24 -4 V
25 -11 V
24 -5 V
25 -6 V
24 -270 V
25 -226 V
25 -3 V
24 7 V
25 59 V
24 5 V
25 0 V
24 -314 V
25 -281 V
stroke 5934 1374 M
24 -1 V
25 -3 V
24 1 V
25 -132 V
24 -53 V
25 19 V
25 -207 V
24 -166 V
25 -48 V
24 -8 V
25 -3 V
24 2 V
25 -40 V
24 -3 V
25 0 V
24 2 V
25 2 V
25 0 V
24 -22 V
25 -13 V
24 -140 V
25 -54 V
24 6 V
25 1 V
24 -1 V
25 2 V
24 28 V
25 -3 V
24 0 V
25 1 V
25 2 V
24 -2 V
25 3 V
24 -5 V
25 5 V
854 3446 Pls
879 3441 Pls
903 3446 Pls
928 3423 Pls
952 3275 Pls
977 3242 Pls
1001 3216 Pls
1026 3209 Pls
1050 3206 Pls
1075 3202 Pls
1099 3199 Pls
1124 3199 Pls
1148 3207 Pls
1173 3209 Pls
1198 3205 Pls
1222 3198 Pls
1247 3202 Pls
1271 3195 Pls
1296 3200 Pls
1320 3191 Pls
1345 3192 Pls
1369 3187 Pls
1394 3170 Pls
1418 3175 Pls
1443 3161 Pls
1468 3167 Pls
1492 3158 Pls
1517 3160 Pls
1541 3156 Pls
1566 3155 Pls
1590 3153 Pls
1615 3149 Pls
1639 3150 Pls
1664 3150 Pls
1688 3147 Pls
1713 3145 Pls
1737 3146 Pls
1762 3144 Pls
1787 3145 Pls
1811 3141 Pls
1836 3135 Pls
1860 3132 Pls
1885 3130 Pls
1909 3129 Pls
1934 3129 Pls
1958 3126 Pls
1983 3125 Pls
2007 3123 Pls
2032 3124 Pls
2056 3123 Pls
2081 3122 Pls
2106 3121 Pls
2130 3120 Pls
2155 3119 Pls
2179 3119 Pls
2204 3117 Pls
2228 3118 Pls
2253 3117 Pls
2277 3116 Pls
2302 3115 Pls
2326 3115 Pls
2351 3114 Pls
2375 3112 Pls
2400 3113 Pls
2425 3089 Pls
2449 3089 Pls
2474 3015 Pls
2498 3009 Pls
2523 2969 Pls
2547 2967 Pls
2572 2959 Pls
2596 2958 Pls
2621 2952 Pls
2645 2951 Pls
2670 2951 Pls
2695 2948 Pls
2719 2947 Pls
2744 2943 Pls
2768 2942 Pls
2793 2940 Pls
2817 2938 Pls
2842 2936 Pls
2866 2933 Pls
2891 2932 Pls
2915 2931 Pls
2940 2929 Pls
2964 2926 Pls
2989 2927 Pls
3014 2927 Pls
3038 2923 Pls
3063 2922 Pls
3087 2921 Pls
3112 2921 Pls
3136 2920 Pls
3161 2919 Pls
3185 2917 Pls
3210 2918 Pls
3234 2915 Pls
3259 2915 Pls
3283 2916 Pls
3308 2916 Pls
3333 2914 Pls
3357 2913 Pls
3382 2908 Pls
3406 2908 Pls
3431 2906 Pls
3455 2904 Pls
3480 2905 Pls
3504 3059 Pls
3529 3061 Pls
3553 3059 Pls
3578 3214 Pls
3602 3216 Pls
3627 3216 Pls
3652 3217 Pls
3676 3216 Pls
3701 3345 Pls
3725 3345 Pls
3750 3369 Pls
3774 3489 Pls
3799 3494 Pls
3823 3595 Pls
3848 3607 Pls
3872 3698 Pls
3897 3706 Pls
3922 3802 Pls
3946 3857 Pls
3971 3880 Pls
3995 3874 Pls
4020 3949 Pls
4044 4017 Pls
4069 4025 Pls
4093 4069 Pls
4118 4078 Pls
4142 4077 Pls
4167 4078 Pls
4191 4055 Pls
4216 4062 Pls
4241 4055 Pls
4265 4035 Pls
4290 4024 Pls
4314 4022 Pls
4339 4044 Pls
4363 4067 Pls
4388 4089 Pls
4412 4117 Pls
4437 4111 Pls
4461 4160 Pls
4486 4165 Pls
4510 4039 Pls
4535 4039 Pls
4560 4003 Pls
4584 4003 Pls
4609 4040 Pls
4633 4015 Pls
4658 4068 Pls
4682 4079 Pls
4707 4126 Pls
4731 4171 Pls
4756 4217 Pls
4780 4208 Pls
4805 4202 Pls
4829 4208 Pls
4854 4172 Pls
4879 4170 Pls
4903 4097 Pls
4928 4035 Pls
4952 3983 Pls
4977 3832 Pls
5001 3825 Pls
5026 3767 Pls
5050 3707 Pls
5075 3647 Pls
5099 3550 Pls
5124 3379 Pls
5149 3272 Pls
5173 2957 Pls
5198 2826 Pls
5222 2646 Pls
5271 2615 Pls
5296 2615 Pls
5320 2562 Pls
5345 2558 Pls
5369 2556 Pls
5394 2552 Pls
5418 2552 Pls
5443 2550 Pls
5468 2548 Pls
5492 2548 Pls
5517 2547 Pls
5541 2415 Pls
5566 2413 Pls
5590 2410 Pls
5615 2423 Pls
5639 2419 Pls
5664 2408 Pls
5688 2403 Pls
5713 2397 Pls
5737 2127 Pls
5762 1901 Pls
5787 1898 Pls
5811 1905 Pls
5836 1964 Pls
5860 1969 Pls
5885 1969 Pls
5909 1655 Pls
5934 1374 Pls
5958 1373 Pls
5983 1370 Pls
6007 1371 Pls
6032 1239 Pls
6056 1186 Pls
6081 1205 Pls
6106 998 Pls
6130 832 Pls
6155 784 Pls
6179 776 Pls
6204 773 Pls
6228 775 Pls
6253 735 Pls
6277 732 Pls
6302 732 Pls
6326 734 Pls
6351 736 Pls
6376 736 Pls
6400 714 Pls
6425 701 Pls
6449 561 Pls
6474 507 Pls
6498 513 Pls
6523 514 Pls
6547 513 Pls
6572 515 Pls
6596 543 Pls
6621 540 Pls
6645 540 Pls
6670 541 Pls
6695 543 Pls
6719 541 Pls
6744 544 Pls
6768 539 Pls
6793 544 Pls
2397 4486 Pls
% End plot #1
1.000 UL
LTb
854 4619 N
854 448 L
6135 0 V
0 4171 V
-6135 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
