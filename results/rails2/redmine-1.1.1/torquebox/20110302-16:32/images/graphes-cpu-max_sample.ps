%!PS-Adobe-2.0
%%Title: images/graphes-cpu-max_sample.ps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Wed Mar  2 12:35:18 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-cpu-max_sample.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (bbrowning)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Mar  2 12:35:18 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
686 448 M
6303 0 V
stroke
LTb
686 448 M
63 0 V
6240 0 R
-63 0 V
602 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 969 M
6303 0 V
stroke
LTb
686 969 M
63 0 V
6240 0 R
-63 0 V
602 969 M
( 10) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 1491 M
6303 0 V
stroke
LTb
686 1491 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 20) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 2012 M
6303 0 V
stroke
LTb
686 2012 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 30) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 2534 M
6303 0 V
stroke
LTb
686 2534 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 40) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 3055 M
6303 0 V
stroke
LTb
686 3055 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 50) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 3576 M
6303 0 V
stroke
LTb
686 3576 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 60) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 4098 M
6303 0 V
stroke
LTb
686 4098 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 70) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 4619 M
6303 0 V
stroke
LTb
686 4619 M
63 0 V
6240 0 R
-63 0 V
-6324 0 R
( 80) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 448 M
0 4171 V
stroke
LTb
686 448 M
0 63 V
0 4108 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1947 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
1947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3207 448 M
0 4171 V
stroke
LTb
3207 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4468 448 M
0 4171 V
stroke
LTb
4468 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5728 448 M
0 4171 V
stroke
LTb
5728 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6989 448 M
0 4171 V
stroke
LTb
6989 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4619 N
686 448 L
6303 0 V
0 4171 V
-6303 0 V
Z stroke
LCb setrgbcolor
196 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(cpu) Cshow
grestore
LTb
LCb setrgbcolor
3837 98 M
(unit = sec ) Cshow
LTb
3837 4829 M
( max_sample) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
1610 4486 M
(cpu@server) Rshow
LT0
1694 4486 M
399 0 V
686 527 M
25 95 V
25 0 V
26 212 V
25 130 V
25 197 V
25 415 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
stroke 3258 1576 M
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 102 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 230 V
26 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 247 V
25 917 V
25 0 V
25 718 V
26 0 V
25 0 V
50 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 225 V
25 8 V
25 0 V
26 10 V
25 63 V
25 84 V
25 0 V
25 0 V
26 0 V
25 0 V
stroke 5905 4180 M
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
25 0 V
26 0 V
25 0 V
25 0 V
25 0 V
686 527 Pls
711 622 Pls
736 622 Pls
762 834 Pls
787 964 Pls
812 1161 Pls
837 1576 Pls
862 1576 Pls
888 1576 Pls
913 1576 Pls
938 1576 Pls
963 1576 Pls
989 1576 Pls
1014 1576 Pls
1039 1576 Pls
1064 1576 Pls
1089 1576 Pls
1115 1576 Pls
1140 1576 Pls
1165 1576 Pls
1190 1576 Pls
1215 1576 Pls
1241 1576 Pls
1266 1576 Pls
1291 1576 Pls
1316 1576 Pls
1342 1576 Pls
1367 1576 Pls
1392 1576 Pls
1417 1576 Pls
1442 1576 Pls
1468 1576 Pls
1493 1576 Pls
1518 1576 Pls
1543 1576 Pls
1568 1576 Pls
1594 1576 Pls
1619 1576 Pls
1644 1576 Pls
1669 1576 Pls
1694 1576 Pls
1720 1576 Pls
1745 1576 Pls
1770 1576 Pls
1795 1576 Pls
1821 1576 Pls
1846 1576 Pls
1871 1576 Pls
1896 1576 Pls
1921 1576 Pls
1947 1576 Pls
1972 1576 Pls
1997 1576 Pls
2022 1576 Pls
2047 1576 Pls
2073 1576 Pls
2098 1576 Pls
2123 1576 Pls
2148 1576 Pls
2174 1576 Pls
2199 1576 Pls
2224 1576 Pls
2249 1576 Pls
2274 1576 Pls
2300 1576 Pls
2325 1576 Pls
2350 1576 Pls
2375 1576 Pls
2400 1576 Pls
2426 1576 Pls
2451 1576 Pls
2476 1576 Pls
2501 1576 Pls
2526 1576 Pls
2552 1576 Pls
2577 1576 Pls
2602 1576 Pls
2627 1576 Pls
2653 1576 Pls
2678 1576 Pls
2703 1576 Pls
2728 1576 Pls
2753 1576 Pls
2779 1576 Pls
2804 1576 Pls
2829 1576 Pls
2854 1576 Pls
2879 1576 Pls
2905 1576 Pls
2930 1576 Pls
2955 1576 Pls
2980 1576 Pls
3006 1576 Pls
3031 1576 Pls
3056 1576 Pls
3081 1576 Pls
3106 1576 Pls
3132 1576 Pls
3157 1576 Pls
3182 1576 Pls
3207 1576 Pls
3232 1576 Pls
3258 1576 Pls
3283 1576 Pls
3308 1576 Pls
3333 1576 Pls
3358 1576 Pls
3384 1576 Pls
3409 1576 Pls
3434 1576 Pls
3459 1576 Pls
3485 1576 Pls
3510 1576 Pls
3535 1576 Pls
3560 1576 Pls
3585 1576 Pls
3611 1576 Pls
3636 1576 Pls
3661 1576 Pls
3686 1576 Pls
3711 1576 Pls
3737 1576 Pls
3762 1576 Pls
3787 1576 Pls
3812 1576 Pls
3838 1576 Pls
3863 1576 Pls
3888 1576 Pls
3913 1576 Pls
3938 1678 Pls
3964 1678 Pls
3989 1678 Pls
4014 1678 Pls
4039 1678 Pls
4064 1678 Pls
4090 1678 Pls
4115 1678 Pls
4140 1678 Pls
4165 1678 Pls
4190 1678 Pls
4216 1678 Pls
4241 1678 Pls
4266 1678 Pls
4291 1678 Pls
4317 1678 Pls
4342 1678 Pls
4367 1678 Pls
4392 1678 Pls
4417 1678 Pls
4443 1678 Pls
4468 1678 Pls
4493 1678 Pls
4518 1678 Pls
4543 1678 Pls
4569 1678 Pls
4594 1678 Pls
4619 1678 Pls
4644 1678 Pls
4669 1908 Pls
4695 1908 Pls
4720 1908 Pls
4745 1908 Pls
4770 1908 Pls
4796 1908 Pls
4821 1908 Pls
4846 1908 Pls
4871 1908 Pls
4896 1908 Pls
4922 1908 Pls
4947 1908 Pls
4972 1908 Pls
4997 1908 Pls
5022 1908 Pls
5048 2155 Pls
5073 3072 Pls
5098 3072 Pls
5123 3790 Pls
5149 3790 Pls
5174 3790 Pls
5224 3790 Pls
5249 3790 Pls
5275 3790 Pls
5300 3790 Pls
5325 3790 Pls
5350 3790 Pls
5375 3790 Pls
5401 3790 Pls
5426 3790 Pls
5451 3790 Pls
5476 3790 Pls
5501 3790 Pls
5527 3790 Pls
5552 3790 Pls
5577 3790 Pls
5602 3790 Pls
5628 3790 Pls
5653 3790 Pls
5678 4015 Pls
5703 4023 Pls
5728 4023 Pls
5754 4033 Pls
5779 4096 Pls
5804 4180 Pls
5829 4180 Pls
5854 4180 Pls
5880 4180 Pls
5905 4180 Pls
5930 4180 Pls
5955 4180 Pls
5981 4180 Pls
6006 4180 Pls
6031 4180 Pls
6056 4180 Pls
6081 4180 Pls
6107 4180 Pls
6132 4180 Pls
6157 4180 Pls
6182 4180 Pls
6207 4180 Pls
6233 4180 Pls
6258 4180 Pls
6283 4180 Pls
6308 4180 Pls
6333 4180 Pls
6359 4180 Pls
6384 4180 Pls
6409 4180 Pls
6434 4180 Pls
6460 4180 Pls
6485 4180 Pls
6510 4180 Pls
6535 4180 Pls
6560 4180 Pls
6586 4180 Pls
6611 4180 Pls
6636 4180 Pls
6661 4180 Pls
6686 4180 Pls
6712 4180 Pls
6737 4180 Pls
6762 4180 Pls
6787 4180 Pls
1893 4486 Pls
% End plot #1
1.000 UL
LTb
686 4619 N
686 448 L
6303 0 V
0 4171 V
-6303 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
